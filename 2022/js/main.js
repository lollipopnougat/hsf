(()=>{"use strict";const t=function(){function t(){}return t.random=function(t,e){return Math.random()*(e-t)+t},t.randint=function(t,e){void 0===t&&(t=0),void 0===e&&(e=1);var i=e-t;return t+Math.round(Math.random()*i)},t}();var e=function(){function e(e,i,n){for(this.alpha=1,this.coordinateCount=5,this.friction=.95,this.gravity=1,this.size=4,this.x=e,this.y=i,this.coordinates=[];this.coordinateCount--;)this.coordinates.push([this.x,this.y]);this.angle=t.random(0,2*Math.PI),this.speed=t.random(1,15),this.friction=.95,this.hue=t.random(n-20,n+20),this.brightness=t.random(50,80),this.decay=t.random(.005,.01)}return e.createParticles=function(t,i,n,s){void 0===s&&(s=30);for(var o=0;o<s;o++)e.particles.push(new e(t,i,n))},e.prototype.update=function(t){this.coordinates.pop(),this.coordinates.unshift([this.x,this.y]),this.speed*=this.friction,this.x+=Math.cos(this.angle)*this.speed,this.y+=Math.sin(this.angle)*this.speed+this.gravity,this.alpha-=this.decay,this.alpha<=this.decay&&e.particles.splice(t,1)},e.prototype.draw=function(t){t.beginPath(),t.moveTo(this.coordinates[this.coordinates.length-1][0],this.coordinates[this.coordinates.length-1][1]),t.lineWidth=this.size,t.lineCap="round",t.lineTo(this.x,this.y),t.strokeStyle="hsla(".concat(this.hue,", 100%, ").concat(this.brightness,"%, ").concat(this.alpha,")"),t.stroke()},e.particles=[],e}();const i=e;var n=function(){function e(i,n,s,o){for(this.acceleration=1.03,this.distanceTraveled=0,this.coordinateCount=3,this.size=6,this.speed=1,this.targetRadius=1,this.particleCount=30,this.x=i,this.y=n,this.sx=i,this.sy=n,this.tx=s,this.ty=o,this.distanceToTarget=e.calculateDistance(i,n,s,o),this.coordinates=[];this.coordinateCount--;)this.coordinates.push([this.x,this.y]);this.angle=Math.atan2(o-n,s-i),this.brightness=t.random(50,70)}return Object.defineProperty(e,"hue",{get:function(){return e._hue},set:function(t){e._hue=t},enumerable:!1,configurable:!0}),e.calculateDistance=function(t,e,i,n){var s=t-i,o=e-n;return Math.sqrt(Math.pow(s,2)+Math.pow(o,2))},e.prototype.update=function(t){this.coordinates.pop(),this.coordinates.unshift([this.x,this.y]),this.targetRadius<8?this.targetRadius+=.3:this.targetRadius=1,this.speed*=this.acceleration;var n=Math.cos(this.angle)*this.speed,s=Math.sin(this.angle)*this.speed;this.distanceTraveled=e.calculateDistance(this.sx,this.sy,this.x+n,this.y+s),this.distanceTraveled>=this.distanceToTarget?(i.createParticles(this.tx,this.ty,e._hue,this.particleCount),e.fireworks.splice(t,1)):(this.x+=n,this.y+=s)},e.prototype.draw=function(t){t.beginPath(),t.moveTo(this.coordinates[this.coordinates.length-1][0],this.coordinates[this.coordinates.length-1][1]),t.lineWidth=this.size,t.lineCap="round",t.lineTo(this.x,this.y),t.strokeStyle="hsl(".concat(e._hue,", 100%, ").concat(this.brightness,"%)"),t.stroke(),t.beginPath(),t.arc(this.tx,this.ty,this.targetRadius,0,2*Math.PI),t.stroke()},e._hue=120,e.fireworks=[],e}();const s=n;window.requestAnimFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||function(t){return window.setTimeout(t,1e3/60)};var o=document.getElementById("canvas"),a=o.getContext("2d");a.globalAlpha=0;var r=window.innerWidth,h=window.innerHeight,c=!0;s.fireworks=[],i.particles=[];var d=0,u=0,l=!1,f=0,p=0,g=document.getElementById("con"),m=document.getElementById("head"),y=document.getElementById("head2"),w=document.getElementById("bgMusic"),v=document.getElementById("tips"),x=document.getElementById("imgdiv"),T=document.getElementById("img");o.width=r,o.height=h;var b={one:["心想事成!","万事如意!","幸福平安!","五福临门!"],two:["财源广进!","年年有余!","招财进宝!","财源滚滚!"],three:["虎虎生威!","吉星高照!","福寿安康!","前程万里!"]};function k(e){m.innerText="",m.innerText="",w.play(),g.style.display="block";var i=Math.floor(e/1e3),n=setInterval((function(){y.innerText=i.toFixed(0),--i<0&&(clearInterval(n),function(){var e,i=location.href.split("?n=")[1];if(i){var n=/&/g;if(n.test(i))e=decodeURI(i.replace(n,"%"));else{for(var o=[],a=0;a<i.length;a+=2)o.push(i.substring(a,a+2));o.unshift(""),e=decodeURI(o.join("%"))}}else e="我的朋友";m.innerText=e,y.innerText="春节快乐!",g.style.display="block",setTimeout((function(){m.innerText="祝虎年",y.innerText=b.one[t.randint(0,3)]}),2200),setTimeout((function(){m.innerText=b.two[t.randint(0,3)],y.innerText=b.three[t.randint(0,3)]}),4e3),setTimeout((function(){g.style.display="none",y.innerText="",T.style.width="400px",T.style.height="400px",x.style.display="block"}),5600),setTimeout((function(){T.style.width="500px",T.style.height="500px";for(var e=0;e<20;e++)s.fireworks.push(new s(r/2,h,t.random(0,r),t.random(0,h/2)))}),6100),setTimeout((function(){x.style.display="none",c=!0}),8200)}())}),1e3)}function M(){window.requestAnimFrame(M),s.hue+=.5,a.globalCompositeOperation="destination-out",a.fillStyle="rgba(0, 0, 0, 0.5)",a.fillRect(0,0,r,h),a.globalCompositeOperation="lighter";for(var e=s.fireworks.length;e--;)s.fireworks[e].draw(a),s.fireworks[e].update(e);for(e=i.particles.length;e--;)i.particles[e].draw(a),i.particles[e].update(e);u>=40?l||(s.fireworks.push(new s(r/2,h,t.random(0,r),t.random(0,h/2))),u=0):u++,d>=5?l&&(s.fireworks.push(new s(r/2,h,f,p)),d=0):d++}var E=0;o.addEventListener("mousemove",(function(t){f=t.pageX-o.offsetLeft,p=t.pageY-o.offsetTop})),o.addEventListener("mousedown",(function(t){c&&(E=t.pageX-o.offsetLeft),t.preventDefault(),l=!0})),o.addEventListener("mouseup",(function(t){c&&(E-=t.pageX-o.offsetLeft,(E=Math.abs(E))>r/2&&(c=!1,k(3e3))),t.preventDefault(),l=!1})),o.addEventListener("touchstart",(function(t){c&&(E=t.touches[0].pageX-o.offsetLeft),t.preventDefault(),l=!0})),o.addEventListener("touchend",(function(t){c&&(E-=t.changedTouches[0].pageX-o.offsetLeft,(E=Math.abs(E))>r/2&&(c=!1,k(3e3))),t.preventDefault(),l=!1})),o.addEventListener("touchmove",(function(t){f=t.touches[0].pageX-o.offsetLeft,p=t.touches[0].pageY-o.offsetTop})),window.onload=function(){M(),v.style.animation="fade 3s cubic-bezier(0, 0, 1, 1) infinite",setTimeout((function(){v.style.display="none"}),2900)}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9qcy9tYWluLmpzIiwibWFwcGluZ3MiOiJtQkFlQSxRQWZjLFdBQ1YsU0FBU0EsS0FZVCxPQVZBQSxFQUFPQyxPQUFTLFNBQVVDLEVBQUtDLEdBQzNCLE9BQU9DLEtBQUtILFVBQVlFLEVBQU1ELEdBQU9BLEdBRXpDRixFQUFPSyxRQUFVLFNBQVVILEVBQUtDLFFBQ2hCLElBQVJELElBQWtCQSxFQUFNLFFBQ2hCLElBQVJDLElBQWtCQSxFQUFNLEdBQzVCLElBQUlHLEVBQVFILEVBQU1ELEVBRWxCLE9BRGVBLEVBQU1FLEtBQUtHLE1BQU1ILEtBQUtILFNBQVdLLElBRzdDTixFQWJFLEdDQ2IsSUFBSVEsRUFBWSxXQUNaLFNBQVNBLEVBQVNDLEVBQUdDLEVBQUdDLEdBU3BCLElBUkFDLEtBQUtDLE1BQVEsRUFDYkQsS0FBS0UsZ0JBQWtCLEVBQ3ZCRixLQUFLRyxTQUFXLElBQ2hCSCxLQUFLSSxRQUFVLEVBQ2ZKLEtBQUtLLEtBQU8sRUFDWkwsS0FBS0gsRUFBSUEsRUFDVEcsS0FBS0YsRUFBSUEsRUFDVEUsS0FBS00sWUFBYyxHQUNaTixLQUFLRSxtQkFDUkYsS0FBS00sWUFBWUMsS0FBSyxDQUFDUCxLQUFLSCxFQUFHRyxLQUFLRixJQUV4Q0UsS0FBS1EsTUFBUSxTQUFjLEVBQWEsRUFBVmhCLEtBQUtpQixJQUNuQ1QsS0FBS1UsTUFBUSxTQUFjLEVBQUcsSUFDOUJWLEtBQUtHLFNBQVcsSUFDaEJILEtBQUtELElBQU0sU0FBY0EsRUFBTSxHQUFJQSxFQUFNLElBQ3pDQyxLQUFLVyxXQUFhLFNBQWMsR0FBSSxJQUNwQ1gsS0FBS1ksTUFBUSxTQUFjLEtBQU8sS0E2QnRDLE9BM0JBaEIsRUFBU2lCLGdCQUFrQixTQUFVaEIsRUFBR0MsRUFBR0MsRUFBS2UsUUFDaEMsSUFBUkEsSUFBa0JBLEVBQU0sSUFDNUIsSUFBSyxJQUFJQyxFQUFJLEVBQUdBLEVBQUlELEVBQUtDLElBQ3JCbkIsRUFBU29CLFVBQVVULEtBQUssSUFBSVgsRUFBU0MsRUFBR0MsRUFBR0MsS0FHbkRILEVBQVNxQixVQUFVQyxPQUFTLFNBQVVDLEdBQ2xDbkIsS0FBS00sWUFBWWMsTUFDakJwQixLQUFLTSxZQUFZZSxRQUFRLENBQUNyQixLQUFLSCxFQUFHRyxLQUFLRixJQUN2Q0UsS0FBS1UsT0FBU1YsS0FBS0csU0FDbkJILEtBQUtILEdBQUtMLEtBQUs4QixJQUFJdEIsS0FBS1EsT0FBU1IsS0FBS1UsTUFDdENWLEtBQUtGLEdBQUtOLEtBQUsrQixJQUFJdkIsS0FBS1EsT0FBU1IsS0FBS1UsTUFBUVYsS0FBS0ksUUFDbkRKLEtBQUtDLE9BQVNELEtBQUtZLE1BQ2ZaLEtBQUtDLE9BQVNELEtBQUtZLE9BQ25CaEIsRUFBU29CLFVBQVVRLE9BQU9MLEVBQU8sSUFHekN2QixFQUFTcUIsVUFBVVEsS0FBTyxTQUFVQyxHQUNoQ0EsRUFBSUMsWUFDSkQsRUFBSUUsT0FBTzVCLEtBQUtNLFlBQVlOLEtBQUtNLFlBQVl1QixPQUFTLEdBQUcsR0FBSTdCLEtBQUtNLFlBQVlOLEtBQUtNLFlBQVl1QixPQUFTLEdBQUcsSUFDM0dILEVBQUlJLFVBQVk5QixLQUFLSyxLQUNyQnFCLEVBQUlLLFFBQVUsUUFDZEwsRUFBSU0sT0FBT2hDLEtBQUtILEVBQUdHLEtBQUtGLEdBQ3hCNEIsRUFBSU8sWUFBYyxRQUFRQyxPQUFPbEMsS0FBS0QsSUFBSyxZQUFZbUMsT0FBT2xDLEtBQUtXLFdBQVksT0FBT3VCLE9BQU9sQyxLQUFLQyxNQUFPLEtBQ3pHeUIsRUFBSVMsVUFFUnZDLEVBQVNvQixVQUFZLEdBQ2RwQixFQS9DSSxHQWlEZixVQ2hEQSxJQUFJd0MsRUFBWSxXQUNaLFNBQVNBLEVBQVNDLEVBQUlDLEVBQUlDLEVBQUlDLEdBZ0IxQixJQWZBeEMsS0FBS3lDLGFBQWUsS0FDcEJ6QyxLQUFLMEMsaUJBQW1CLEVBQ3hCMUMsS0FBS0UsZ0JBQWtCLEVBQ3ZCRixLQUFLSyxLQUFPLEVBQ1pMLEtBQUtVLE1BQVEsRUFDYlYsS0FBSzJDLGFBQWUsRUFDcEIzQyxLQUFLNEMsY0FBZ0IsR0FDckI1QyxLQUFLSCxFQUFJd0MsRUFDVHJDLEtBQUtGLEVBQUl3QyxFQUNUdEMsS0FBS3FDLEdBQUtBLEVBQ1ZyQyxLQUFLc0MsR0FBS0EsRUFDVnRDLEtBQUt1QyxHQUFLQSxFQUNWdkMsS0FBS3dDLEdBQUtBLEVBQ1Z4QyxLQUFLNkMsaUJBQW1CVCxFQUFTVSxrQkFBa0JULEVBQUlDLEVBQUlDLEVBQUlDLEdBQy9EeEMsS0FBS00sWUFBYyxHQUNaTixLQUFLRSxtQkFDUkYsS0FBS00sWUFBWUMsS0FBSyxDQUFDUCxLQUFLSCxFQUFHRyxLQUFLRixJQUV4Q0UsS0FBS1EsTUFBUWhCLEtBQUt1RCxNQUFNUCxFQUFLRixFQUFJQyxFQUFLRixHQUN0Q3JDLEtBQUtXLFdBQWEsU0FBYyxHQUFJLElBcUR4QyxPQW5EQXFDLE9BQU9DLGVBQWViLEVBQVUsTUFBTyxDQUNuQ2MsSUFBSyxXQUNELE9BQU9kLEVBQVNlLE1BRXBCQyxJQUFLLFNBQVVDLEdBQ1hqQixFQUFTZSxLQUFPRSxHQUVwQkMsWUFBWSxFQUNaQyxjQUFjLElBRWxCbkIsRUFBU1Usa0JBQW9CLFNBQVVVLEVBQUtDLEVBQUtDLEVBQUtDLEdBQ2xELElBQUlDLEVBQVlKLEVBQU1FLEVBQ2xCRyxFQUFZSixFQUFNRSxFQUN0QixPQUFPbkUsS0FBS3NFLEtBQUt0RSxLQUFLdUUsSUFBSUgsRUFBVyxHQUFLcEUsS0FBS3VFLElBQUlGLEVBQVcsS0FFbEV6QixFQUFTbkIsVUFBVUMsT0FBUyxTQUFVQyxHQUNsQ25CLEtBQUtNLFlBQVljLE1BQ2pCcEIsS0FBS00sWUFBWWUsUUFBUSxDQUFDckIsS0FBS0gsRUFBR0csS0FBS0YsSUFDbkNFLEtBQUsyQyxhQUFlLEVBQ3BCM0MsS0FBSzJDLGNBQWdCLEdBR3JCM0MsS0FBSzJDLGFBQWUsRUFFeEIzQyxLQUFLVSxPQUFTVixLQUFLeUMsYUFDbkIsSUFBSXVCLEVBQUt4RSxLQUFLOEIsSUFBSXRCLEtBQUtRLE9BQVNSLEtBQUtVLE1BQ2pDdUQsRUFBS3pFLEtBQUsrQixJQUFJdkIsS0FBS1EsT0FBU1IsS0FBS1UsTUFDckNWLEtBQUswQyxpQkFBbUJOLEVBQVNVLGtCQUFrQjlDLEtBQUtxQyxHQUFJckMsS0FBS3NDLEdBQUl0QyxLQUFLSCxFQUFJbUUsRUFBSWhFLEtBQUtGLEVBQUltRSxHQUN2RmpFLEtBQUswQyxrQkFBb0IxQyxLQUFLNkMsa0JBQzlCLGtCQUF5QjdDLEtBQUt1QyxHQUFJdkMsS0FBS3dDLEdBQUlKLEVBQVNlLEtBQU1uRCxLQUFLNEMsZUFDL0RSLEVBQVM4QixVQUFVMUMsT0FBT0wsRUFBTyxLQUdqQ25CLEtBQUtILEdBQUttRSxFQUNWaEUsS0FBS0YsR0FBS21FLElBR2xCN0IsRUFBU25CLFVBQVVRLEtBQU8sU0FBVUMsR0FDaENBLEVBQUlDLFlBQ0pELEVBQUlFLE9BQU81QixLQUFLTSxZQUFZTixLQUFLTSxZQUFZdUIsT0FBUyxHQUFHLEdBQUk3QixLQUFLTSxZQUFZTixLQUFLTSxZQUFZdUIsT0FBUyxHQUFHLElBQzNHSCxFQUFJSSxVQUFZOUIsS0FBS0ssS0FDckJxQixFQUFJSyxRQUFVLFFBQ2RMLEVBQUlNLE9BQU9oQyxLQUFLSCxFQUFHRyxLQUFLRixHQUN4QjRCLEVBQUlPLFlBQWMsT0FBT0MsT0FBT0UsRUFBU2UsS0FBTSxZQUFZakIsT0FBT2xDLEtBQUtXLFdBQVksTUFDbkZlLEVBQUlTLFNBQ0pULEVBQUlDLFlBQ0pELEVBQUl5QyxJQUFJbkUsS0FBS3VDLEdBQUl2QyxLQUFLd0MsR0FBSXhDLEtBQUsyQyxhQUFjLEVBQWEsRUFBVm5ELEtBQUtpQixJQUNyRGlCLEVBQUlTLFVBRVJDLEVBQVNlLEtBQU8sSUFDaEJmLEVBQVM4QixVQUFZLEdBQ2Q5QixFQTFFSSxHQTRFZixVQzNFQWdDLE9BQU9DLGlCQUNJRCxPQUFPRSx1QkFDVkYsT0FBT0csNkJBQ1BILE9BQU9JLDBCQUNQLFNBQVdDLEdBQ1AsT0FBT0wsT0FBT00sV0FBV0QsRUFBVSxJQUFPLEtBR3RELElBQUlFLEVBQVNDLFNBQVNDLGVBQWUsVUFDakNuRCxFQUFNaUQsRUFBT0csV0FBVyxNQUM1QnBELEVBQUlxRCxZQUFjLEVBQ2xCLElBQUlDLEVBQUtaLE9BQU9hLFdBQ1pDLEVBQUtkLE9BQU9lLFlBQ1pDLEdBQU8sRUFDWCxZQUFxQixHQUNyQixZQUFxQixHQUNyQixJQUNJQyxFQUFjLEVBRWRDLEVBQVksRUFDWkMsR0FBWSxFQUNaQyxFQUFLLEVBQ0xDLEVBQUssRUFDTEMsRUFBTWQsU0FBU0MsZUFBZSxPQUM5QmMsRUFBS2YsU0FBU0MsZUFBZSxRQUM3QmUsRUFBS2hCLFNBQVNDLGVBQWUsU0FDN0JnQixFQUFTakIsU0FBU0MsZUFBZSxXQUNqQ2lCLEVBQU9sQixTQUFTQyxlQUFlLFFBQy9Ca0IsRUFBU25CLFNBQVNDLGVBQWUsVUFDakNtQixFQUFNcEIsU0FBU0MsZUFBZSxPQUNsQ0YsRUFBT3NCLE1BQVFqQixFQUNmTCxFQUFPdUIsT0FBU2hCLEVBQ2hCLElBQUlpQixFQUFRLENBQ1JDLElBQUssQ0FBQyxRQUFTLFFBQVMsUUFBUyxTQUNqQ0MsSUFBSyxDQUFDLFFBQVMsUUFBUyxRQUFTLFNBQ2pDQyxNQUFPLENBQUMsUUFBUyxRQUFTLFFBQVMsVUFvRHZDLFNBQVNDLEVBQVVDLEdBQ2ZiLEVBQUdjLFVBQVksR0FDZmQsRUFBR2MsVUFBWSxHQUNmWixFQUFPYSxPQUNQaEIsRUFBSWlCLE1BQU1DLFFBQVUsUUFDcEIsSUFBSUMsRUFBTXJILEtBQUtzSCxNQUFNTixFQUFVLEtBQzNCTyxFQUFTQyxhQUFZLFdBQ3JCcEIsRUFBR2EsVUFBWUksRUFBSUksUUFBUSxLQUMzQkosRUFDVSxJQUNOSyxjQUFjSCxHQTVEMUIsV0FDSSxJQUNJSSxFQURBQyxFQUFVQyxTQUFTQyxLQUFLQyxNQUFNLE9BQU8sR0FFekMsR0FBSUgsRUFBUyxDQUNULElBQUlJLEVBQU0sS0FDVixHQUFJQSxFQUFJQyxLQUFLTCxHQUNURCxFQUFPTyxVQUFVTixFQUFRTyxRQUFRSCxFQUFLLFVBRXJDLENBRUQsSUFEQSxJQUFJSSxFQUFNLEdBQ0Q3RyxFQUFJLEVBQUdBLEVBQUlxRyxFQUFRdkYsT0FBUWQsR0FBSyxFQUNyQzZHLEVBQUlySCxLQUFLNkcsRUFBUVMsVUFBVTlHLEVBQUdBLEVBQUksSUFFdEM2RyxFQUFJdkcsUUFBUSxJQUNaOEYsRUFBT08sVUFBVUUsRUFBSUUsS0FBSyxZQUk5QlgsRUFBTyxPQUVYeEIsRUFBR2MsVUFBWVUsRUFDZnZCLEVBQUdhLFVBQVksUUFDZmYsRUFBSWlCLE1BQU1DLFFBQVUsUUFDcEJsQyxZQUFXLFdBQ1BpQixFQUFHYyxVQUFZLE1BQ2ZiLEVBQUdhLFVBQVlOLEVBQU1DLElBQUksVUFBZSxFQUFHLE1BQzVDLE1BQ0gxQixZQUFXLFdBQ1BpQixFQUFHYyxVQUFZTixFQUFNRSxJQUFJLFVBQWUsRUFBRyxJQUMzQ1QsRUFBR2EsVUFBWU4sRUFBTUcsTUFBTSxVQUFlLEVBQUcsTUFDOUMsS0FDSDVCLFlBQVcsV0FDUGdCLEVBQUlpQixNQUFNQyxRQUFVLE9BQ3BCaEIsRUFBR2EsVUFBWSxHQUNmVCxFQUFJVyxNQUFNVixNQUFRLFFBQ2xCRCxFQUFJVyxNQUFNVCxPQUFTLFFBQ25CSCxFQUFPWSxNQUFNQyxRQUFVLFVBQ3hCLE1BQ0hsQyxZQUFXLFdBQ1BzQixFQUFJVyxNQUFNVixNQUFRLFFBQ2xCRCxFQUFJVyxNQUFNVCxPQUFTLFFBQ25CLElBQUssSUFBSW5GLEVBQUksRUFBR0EsRUFBSSxHQUFJQSxJQUNwQixpQkFBd0IsSUFBSSxFQUFTaUUsRUFBSyxFQUFHRSxFQUFJLFNBQWMsRUFBR0YsR0FBSyxTQUFjLEVBQUdFLEVBQUssT0FFbEcsTUFDSFIsWUFBVyxXQUNQcUIsRUFBT1ksTUFBTUMsUUFBVSxPQUN2QnhCLEdBQU8sSUFDUixNQWFLMkMsTUFFTCxLQUVQLFNBQVNDLElBQ0w1RCxPQUFPQyxpQkFBaUIyRCxHQUN4QixPQUFnQixHQUNoQnRHLEVBQUl1Ryx5QkFBMkIsa0JBQy9CdkcsRUFBSXdHLFVBQVkscUJBQ2hCeEcsRUFBSXlHLFNBQVMsRUFBRyxFQUFHbkQsRUFBSUUsR0FDdkJ4RCxFQUFJdUcseUJBQTJCLFVBRS9CLElBREEsSUFBSWxILEVBQUksbUJBQ0RBLEtBQ0gsWUFBbUJBLEdBQUdVLEtBQUtDLEdBQzNCLFlBQW1CWCxHQUFHRyxPQUFPSCxHQUdqQyxJQURJQSxFQUFJLG1CQUNEQSxLQUNILFlBQW1CQSxHQUFHVSxLQUFLQyxHQUMzQixZQUFtQlgsR0FBR0csT0FBT0gsR0FFN0J1RSxHQXJHUyxHQXNHSkMsSUFDRCxpQkFBd0IsSUFBSSxFQUFTUCxFQUFLLEVBQUdFLEVBQUksU0FBYyxFQUFHRixHQUFLLFNBQWMsRUFBR0UsRUFBSyxLQUM3RkksRUFBWSxHQUloQkEsSUFFQUQsR0FoSFcsRUFpSFBFLElBQ0EsaUJBQXdCLElBQUksRUFBU1AsRUFBSyxFQUFHRSxFQUFJTSxFQUFJQyxJQUNyREosRUFBYyxHQUlsQkEsSUFHUixJQUFJK0MsRUFBSyxFQUNUekQsRUFBTzBELGlCQUFpQixhQUFhLFNBQVVDLEdBQzNDOUMsRUFBSzhDLEVBQUVDLE1BQVE1RCxFQUFPNkQsV0FDdEIvQyxFQUFLNkMsRUFBRUcsTUFBUTlELEVBQU8rRCxhQUUxQi9ELEVBQU8wRCxpQkFBaUIsYUFBYSxTQUFVQyxHQUN2Q2xELElBQ0FnRCxFQUFLRSxFQUFFQyxNQUFRNUQsRUFBTzZELFlBRTFCRixFQUFFSyxpQkFDRnBELEdBQVksS0FFaEJaLEVBQU8wRCxpQkFBaUIsV0FBVyxTQUFVQyxHQUNyQ2xELElBQ0FnRCxHQUFNRSxFQUFFQyxNQUFRNUQsRUFBTzZELFlBQ3ZCSixFQUFLNUksS0FBS29KLElBQUlSLElBQ0xwRCxFQUFLLElBQ1ZJLEdBQU8sRUFDUG1CLEVBQVUsT0FHbEIrQixFQUFFSyxpQkFDRnBELEdBQVksS0FFaEJaLEVBQU8wRCxpQkFBaUIsY0FBYyxTQUFVQyxHQUN4Q2xELElBQ0FnRCxFQUFLRSxFQUFFTyxRQUFRLEdBQUdOLE1BQVE1RCxFQUFPNkQsWUFFckNGLEVBQUVLLGlCQUNGcEQsR0FBWSxLQUVoQlosRUFBTzBELGlCQUFpQixZQUFZLFNBQVVDLEdBQ3RDbEQsSUFDQWdELEdBQU1FLEVBQUVRLGVBQWUsR0FBR1AsTUFBUTVELEVBQU82RCxZQUN6Q0osRUFBSzVJLEtBQUtvSixJQUFJUixJQUNMcEQsRUFBSyxJQUNWSSxHQUFPLEVBQ1BtQixFQUFVLE9BR2xCK0IsRUFBRUssaUJBQ0ZwRCxHQUFZLEtBRWhCWixFQUFPMEQsaUJBQWlCLGFBQWEsU0FBVUMsR0FDM0M5QyxFQUFLOEMsRUFBRU8sUUFBUSxHQUFHTixNQUFRNUQsRUFBTzZELFdBQ2pDL0MsRUFBSzZDLEVBQUVPLFFBQVEsR0FBR0osTUFBUTlELEVBQU8rRCxhQUVyQ3RFLE9BQU8yRSxPQUFTLFdBQ1pmLElBQ0FsQyxFQUFLYSxNQUFNcUMsVUFBWSw0Q0FDdkJ0RSxZQUFXLFdBQ1BvQixFQUFLYSxNQUFNQyxRQUFVLFNBQ3RCLFEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYW52YXNqcy1maXJld29ya3MvLi9zcmMvdHMvUmFuZG9tLnRzIiwid2VicGFjazovL2NhbnZhc2pzLWZpcmV3b3Jrcy8uL3NyYy90cy9QYXJ0aWNsZS50cyIsIndlYnBhY2s6Ly9jYW52YXNqcy1maXJld29ya3MvLi9zcmMvdHMvRmlyZXdvcmsudHMiLCJ3ZWJwYWNrOi8vY2FudmFzanMtZmlyZXdvcmtzLy4vc3JjL3RzL21haW4udHMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIFJhbmRvbSA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBSYW5kb20oKSB7XHJcbiAgICB9XHJcbiAgICBSYW5kb20ucmFuZG9tID0gZnVuY3Rpb24gKG1pbiwgbWF4KSB7XHJcbiAgICAgICAgcmV0dXJuIE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSArIG1pbjtcclxuICAgIH07XHJcbiAgICBSYW5kb20ucmFuZGludCA9IGZ1bmN0aW9uIChtaW4sIG1heCkge1xyXG4gICAgICAgIGlmIChtaW4gPT09IHZvaWQgMCkgeyBtaW4gPSAwOyB9XHJcbiAgICAgICAgaWYgKG1heCA9PT0gdm9pZCAwKSB7IG1heCA9IDE7IH1cclxuICAgICAgICB2YXIgcmFuZ2UgPSBtYXggLSBtaW47XHJcbiAgICAgICAgdmFyIHJhblZhbHVlID0gbWluICsgTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogcmFuZ2UpO1xyXG4gICAgICAgIHJldHVybiByYW5WYWx1ZTtcclxuICAgIH07XHJcbiAgICByZXR1cm4gUmFuZG9tO1xyXG59KCkpO1xyXG5leHBvcnQgZGVmYXVsdCBSYW5kb207XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVVtRnVaRzl0TG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2YzNKakwzUnpMMUpoYm1SdmJTNTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVR0SlFVRkJPMGxCV1VFc1EwRkJRenRKUVZocFFpeGhRVUZOTEVkQlFYQkNMRlZCUVhGQ0xFZEJRVmNzUlVGQlJTeEhRVUZYTzFGQlEzcERMRTlCUVU4c1NVRkJTU3hEUVVGRExFMUJRVTBzUlVGQlJTeEhRVUZITEVOQlFVTXNSMEZCUnl4SFFVRkhMRWRCUVVjc1EwRkJReXhIUVVGSExFZEJRVWNzUTBGQlF6dEpRVU0zUXl4RFFVRkRPMGxCUldFc1kwRkJUeXhIUVVGeVFpeFZRVUZ6UWl4SFFVRmxMRVZCUVVVc1IwRkJaVHRSUVVGb1F5eHZRa0ZCUVN4RlFVRkJMRTlCUVdVN1VVRkJSU3h2UWtGQlFTeEZRVUZCTEU5QlFXVTdVVUZEYkVRc1NVRkJTU3hMUVVGTExFZEJRVWNzUjBGQlJ5eEhRVUZITEVkQlFVY3NRMEZCUXp0UlFVTjBRaXhKUVVGSkxGRkJRVkVzUjBGQlJ5eEhRVUZITEVkQlFVY3NTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zVFVGQlRTeEZRVUZGTEVkQlFVY3NTMEZCU3l4RFFVRkRMRU5CUVVNN1VVRkRka1FzVDBGQlR5eFJRVUZSTEVOQlFVTTdTVUZEY0VJc1EwRkJRenRKUVVkTUxHRkJRVU03UVVGQlJDeERRVUZETEVGQldrUXNTVUZaUXlKOSIsImltcG9ydCBSYW5kb20gZnJvbSAnLi9SYW5kb20nO1xyXG52YXIgUGFydGljbGUgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gUGFydGljbGUoeCwgeSwgaHVlKSB7XHJcbiAgICAgICAgdGhpcy5hbHBoYSA9IDE7XHJcbiAgICAgICAgdGhpcy5jb29yZGluYXRlQ291bnQgPSA1O1xyXG4gICAgICAgIHRoaXMuZnJpY3Rpb24gPSAwLjk1O1xyXG4gICAgICAgIHRoaXMuZ3Jhdml0eSA9IDE7XHJcbiAgICAgICAgdGhpcy5zaXplID0gNDtcclxuICAgICAgICB0aGlzLnggPSB4O1xyXG4gICAgICAgIHRoaXMueSA9IHk7XHJcbiAgICAgICAgdGhpcy5jb29yZGluYXRlcyA9IFtdO1xyXG4gICAgICAgIHdoaWxlICh0aGlzLmNvb3JkaW5hdGVDb3VudC0tKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29vcmRpbmF0ZXMucHVzaChbdGhpcy54LCB0aGlzLnldKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5hbmdsZSA9IFJhbmRvbS5yYW5kb20oMCwgTWF0aC5QSSAqIDIpO1xyXG4gICAgICAgIHRoaXMuc3BlZWQgPSBSYW5kb20ucmFuZG9tKDEsIDE1KTtcclxuICAgICAgICB0aGlzLmZyaWN0aW9uID0gMC45NTtcclxuICAgICAgICB0aGlzLmh1ZSA9IFJhbmRvbS5yYW5kb20oaHVlIC0gMjAsIGh1ZSArIDIwKTtcclxuICAgICAgICB0aGlzLmJyaWdodG5lc3MgPSBSYW5kb20ucmFuZG9tKDUwLCA4MCk7XHJcbiAgICAgICAgdGhpcy5kZWNheSA9IFJhbmRvbS5yYW5kb20oMC4wMDUsIDAuMDEpO1xyXG4gICAgfVxyXG4gICAgUGFydGljbGUuY3JlYXRlUGFydGljbGVzID0gZnVuY3Rpb24gKHgsIHksIGh1ZSwgbnVtKSB7XHJcbiAgICAgICAgaWYgKG51bSA9PT0gdm9pZCAwKSB7IG51bSA9IDMwOyB9XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBudW07IGkrKykge1xyXG4gICAgICAgICAgICBQYXJ0aWNsZS5wYXJ0aWNsZXMucHVzaChuZXcgUGFydGljbGUoeCwgeSwgaHVlKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIFBhcnRpY2xlLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAoaW5kZXgpIHtcclxuICAgICAgICB0aGlzLmNvb3JkaW5hdGVzLnBvcCgpO1xyXG4gICAgICAgIHRoaXMuY29vcmRpbmF0ZXMudW5zaGlmdChbdGhpcy54LCB0aGlzLnldKTtcclxuICAgICAgICB0aGlzLnNwZWVkICo9IHRoaXMuZnJpY3Rpb247XHJcbiAgICAgICAgdGhpcy54ICs9IE1hdGguY29zKHRoaXMuYW5nbGUpICogdGhpcy5zcGVlZDtcclxuICAgICAgICB0aGlzLnkgKz0gTWF0aC5zaW4odGhpcy5hbmdsZSkgKiB0aGlzLnNwZWVkICsgdGhpcy5ncmF2aXR5O1xyXG4gICAgICAgIHRoaXMuYWxwaGEgLT0gdGhpcy5kZWNheTtcclxuICAgICAgICBpZiAodGhpcy5hbHBoYSA8PSB0aGlzLmRlY2F5KSB7XHJcbiAgICAgICAgICAgIFBhcnRpY2xlLnBhcnRpY2xlcy5zcGxpY2UoaW5kZXgsIDEpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBQYXJ0aWNsZS5wcm90b3R5cGUuZHJhdyA9IGZ1bmN0aW9uIChjdHgpIHtcclxuICAgICAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICAgICAgY3R4Lm1vdmVUbyh0aGlzLmNvb3JkaW5hdGVzW3RoaXMuY29vcmRpbmF0ZXMubGVuZ3RoIC0gMV1bMF0sIHRoaXMuY29vcmRpbmF0ZXNbdGhpcy5jb29yZGluYXRlcy5sZW5ndGggLSAxXVsxXSk7XHJcbiAgICAgICAgY3R4LmxpbmVXaWR0aCA9IHRoaXMuc2l6ZTtcclxuICAgICAgICBjdHgubGluZUNhcCA9ICdyb3VuZCc7XHJcbiAgICAgICAgY3R4LmxpbmVUbyh0aGlzLngsIHRoaXMueSk7XHJcbiAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gXCJoc2xhKFwiLmNvbmNhdCh0aGlzLmh1ZSwgXCIsIDEwMCUsIFwiKS5jb25jYXQodGhpcy5icmlnaHRuZXNzLCBcIiUsIFwiKS5jb25jYXQodGhpcy5hbHBoYSwgXCIpXCIpO1xyXG4gICAgICAgIGN0eC5zdHJva2UoKTtcclxuICAgIH07XHJcbiAgICBQYXJ0aWNsZS5wYXJ0aWNsZXMgPSBbXTtcclxuICAgIHJldHVybiBQYXJ0aWNsZTtcclxufSgpKTtcclxuZXhwb3J0IGRlZmF1bHQgUGFydGljbGU7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVVHRnlkR2xqYkdVdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk5emNtTXZkSE12VUdGeWRHbGpiR1V1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNUMEZCVHl4TlFVRk5MRTFCUVUwc1ZVRkJWU3hEUVVGRE8wRkJSVGxDTzBsQlEwa3NhMEpCUVc5Q0xFTkJRVk1zUlVGQlJTeERRVUZUTEVWQlFVVXNSMEZCVnp0UlFYTkNOME1zVlVGQlN5eEhRVUZITEVOQlFVTXNRMEZCUXp0UlFVbFdMRzlDUVVGbExFZEJRVmNzUTBGQlF5eERRVUZETzFGQlJ6VkNMR0ZCUVZFc1IwRkJSeXhKUVVGSkxFTkJRVU03VVVGRmFFSXNXVUZCVHl4SFFVRkhMRU5CUVVNc1EwRkJRenRSUVVkYUxGTkJRVWtzUjBGQlJ5eERRVUZETEVOQlFVTTdVVUZxUTJJc1NVRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTTdVVUZEV0N4SlFVRkpMRU5CUVVNc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF6dFJRVVZZTEVsQlFVa3NRMEZCUXl4WFFVRlhMRWRCUVVjc1JVRkJSU3hEUVVGRE8xRkJRM1JDTEU5QlFVOHNTVUZCU1N4RFFVRkRMR1ZCUVdVc1JVRkJSU3hGUVVGRk8xbEJRek5DTEVsQlFVa3NRMEZCUXl4WFFVRlhMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNSVUZCUlN4SlFVRkpMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dFRRVU16UXp0UlFVVkVMRWxCUVVrc1EwRkJReXhMUVVGTExFZEJRVWNzVFVGQlRTeERRVUZETEUxQlFVMHNRMEZCUXl4RFFVRkRMRVZCUVVVc1NVRkJTU3hEUVVGRExFVkJRVVVzUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXp0UlFVTXpReXhKUVVGSkxFTkJRVU1zUzBGQlN5eEhRVUZITEUxQlFVMHNRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJReXhGUVVGRkxFVkJRVVVzUTBGQlF5eERRVUZETzFGQlJXeERMRWxCUVVrc1EwRkJReXhSUVVGUkxFZEJRVWNzU1VGQlNTeERRVUZETzFGQlIzSkNMRWxCUVVrc1EwRkJReXhIUVVGSExFZEJRVWNzVFVGQlRTeERRVUZETEUxQlFVMHNRMEZCUXl4SFFVRkhMRWRCUVVjc1JVRkJSU3hGUVVGRkxFZEJRVWNzUjBGQlJ5eEZRVUZGTEVOQlFVTXNRMEZCUXp0UlFVTTNReXhKUVVGSkxFTkJRVU1zVlVGQlZTeEhRVUZITEUxQlFVMHNRMEZCUXl4TlFVRk5MRU5CUVVNc1JVRkJSU3hGUVVGRkxFVkJRVVVzUTBGQlF5eERRVUZETzFGQlJYaERMRWxCUVVrc1EwRkJReXhMUVVGTExFZEJRVWNzVFVGQlRTeERRVUZETEUxQlFVMHNRMEZCUXl4TFFVRkxMRVZCUVVVc1NVRkJTU3hEUVVGRExFTkJRVU03U1VGRE5VTXNRMEZCUXp0SlFXdENZU3gzUWtGQlpTeEhRVUUzUWl4VlFVRTRRaXhEUVVGUkxFVkJRVVVzUTBGQlVTeEZRVUZGTEVkQlFWY3NSVUZCUlN4SFFVRlJPMUZCUVZJc2IwSkJRVUVzUlVGQlFTeFJRVUZSTzFGQlEyNUZMRXRCUVVrc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eEZRVUZGTEVOQlFVTXNSMEZCUnl4SFFVRkhMRVZCUVVVc1EwRkJReXhGUVVGRkxFVkJRVVU3V1VGRGVrSXNVVUZCVVN4RFFVRkRMRk5CUVZNc1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeFJRVUZSTEVOQlFVTXNRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETzFOQlEzQkVPMGxCUTB3c1EwRkJRenRKUVVOTkxIbENRVUZOTEVkQlFXSXNWVUZCWXl4TFFVRmhPMUZCUlhaQ0xFbEJRVWtzUTBGQlF5eFhRVUZYTEVOQlFVTXNSMEZCUnl4RlFVRkZMRU5CUVVNN1VVRkZka0lzU1VGQlNTeERRVUZETEZkQlFWY3NRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eEZRVUZGTEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8xRkJSVE5ETEVsQlFVa3NRMEZCUXl4TFFVRkxMRWxCUVVrc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF6dFJRVVUxUWl4SlFVRkpMRU5CUVVNc1EwRkJReXhKUVVGSkxFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVGSExFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTTdVVUZETlVNc1NVRkJTU3hEUVVGRExFTkJRVU1zU1VGQlNTeEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNTMEZCU3l4SFFVRkhMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU03VVVGRk0wUXNTVUZCU1N4RFFVRkRMRXRCUVVzc1NVRkJTU3hKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETzFGQlIzcENMRWxCUVVrc1NVRkJTU3hEUVVGRExFdEJRVXNzU1VGQlNTeEpRVUZKTEVOQlFVTXNTMEZCU3l4RlFVRkZPMWxCUXpGQ0xGRkJRVkVzUTBGQlF5eFRRVUZUTEVOQlFVTXNUVUZCVFN4RFFVRkRMRXRCUVVzc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF6dFRRVU4yUXp0SlFVTk1MRU5CUVVNN1NVRkZUU3gxUWtGQlNTeEhRVUZZTEZWQlFWa3NSMEZCTmtJN1VVRkRja01zUjBGQlJ5eERRVUZETEZOQlFWTXNSVUZCUlN4RFFVRkRPMUZCUldoQ0xFZEJRVWNzUTBGQlF5eE5RVUZOTEVOQlFVTXNTVUZCU1N4RFFVRkRMRmRCUVZjc1EwRkJReXhKUVVGSkxFTkJRVU1zVjBGQlZ5eERRVUZETEUxQlFVMHNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUlVGQlJTeEpRVUZKTEVOQlFVTXNWMEZCVnl4RFFVRkRMRWxCUVVrc1EwRkJReXhYUVVGWExFTkJRVU1zVFVGQlRTeEhRVUZITEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU03VVVGREwwY3NSMEZCUnl4RFFVRkRMRk5CUVZNc1IwRkJSeXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETzFGQlF6RkNMRWRCUVVjc1EwRkJReXhQUVVGUExFZEJRVWNzVDBGQlR5eERRVUZETzFGQlEzUkNMRWRCUVVjc1EwRkJReXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNSVUZCUlN4SlFVRkpMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU03VVVGRk0wSXNSMEZCUnl4RFFVRkRMRmRCUVZjc1IwRkJSeXhsUVVGUkxFbEJRVWtzUTBGQlF5eEhRVUZITEhGQ1FVRlhMRWxCUVVrc1EwRkJReXhWUVVGVkxHZENRVUZOTEVsQlFVa3NRMEZCUXl4TFFVRkxMRTFCUVVjc1EwRkJRenRSUVVOb1JpeEhRVUZITEVOQlFVTXNUVUZCVFN4RlFVRkZMRU5CUVVNN1NVRkRha0lzUTBGQlF6dEpRVzVEWVN4clFrRkJVeXhIUVVGbExFVkJRVVVzUTBGQlF6dEpRWEZETjBNc1pVRkJRenREUVVGQkxFRkJNVVZFTEVsQk1FVkRPMlZCTVVWdlFpeFJRVUZSSW4wPSIsImltcG9ydCBSYW5kb20gZnJvbSAnLi9SYW5kb20nO1xyXG5pbXBvcnQgUGFydGljbGUgZnJvbSAnLi9QYXJ0aWNsZSc7XHJcbnZhciBGaXJld29yayA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBGaXJld29yayhzeCwgc3ksIHR4LCB0eSkge1xyXG4gICAgICAgIHRoaXMuYWNjZWxlcmF0aW9uID0gMS4wMztcclxuICAgICAgICB0aGlzLmRpc3RhbmNlVHJhdmVsZWQgPSAwO1xyXG4gICAgICAgIHRoaXMuY29vcmRpbmF0ZUNvdW50ID0gMztcclxuICAgICAgICB0aGlzLnNpemUgPSA2O1xyXG4gICAgICAgIHRoaXMuc3BlZWQgPSAxO1xyXG4gICAgICAgIHRoaXMudGFyZ2V0UmFkaXVzID0gMTtcclxuICAgICAgICB0aGlzLnBhcnRpY2xlQ291bnQgPSAzMDtcclxuICAgICAgICB0aGlzLnggPSBzeDtcclxuICAgICAgICB0aGlzLnkgPSBzeTtcclxuICAgICAgICB0aGlzLnN4ID0gc3g7XHJcbiAgICAgICAgdGhpcy5zeSA9IHN5O1xyXG4gICAgICAgIHRoaXMudHggPSB0eDtcclxuICAgICAgICB0aGlzLnR5ID0gdHk7XHJcbiAgICAgICAgdGhpcy5kaXN0YW5jZVRvVGFyZ2V0ID0gRmlyZXdvcmsuY2FsY3VsYXRlRGlzdGFuY2Uoc3gsIHN5LCB0eCwgdHkpO1xyXG4gICAgICAgIHRoaXMuY29vcmRpbmF0ZXMgPSBbXTtcclxuICAgICAgICB3aGlsZSAodGhpcy5jb29yZGluYXRlQ291bnQtLSkge1xyXG4gICAgICAgICAgICB0aGlzLmNvb3JkaW5hdGVzLnB1c2goW3RoaXMueCwgdGhpcy55XSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuYW5nbGUgPSBNYXRoLmF0YW4yKHR5IC0gc3ksIHR4IC0gc3gpO1xyXG4gICAgICAgIHRoaXMuYnJpZ2h0bmVzcyA9IFJhbmRvbS5yYW5kb20oNTAsIDcwKTtcclxuICAgIH1cclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShGaXJld29yaywgXCJodWVcIiwge1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gRmlyZXdvcmsuX2h1ZTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIEZpcmV3b3JrLl9odWUgPSB2YWx1ZTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBGaXJld29yay5jYWxjdWxhdGVEaXN0YW5jZSA9IGZ1bmN0aW9uIChwMXgsIHAxeSwgcDJ4LCBwMnkpIHtcclxuICAgICAgICB2YXIgeERpc3RhbmNlID0gcDF4IC0gcDJ4O1xyXG4gICAgICAgIHZhciB5RGlzdGFuY2UgPSBwMXkgLSBwMnk7XHJcbiAgICAgICAgcmV0dXJuIE1hdGguc3FydChNYXRoLnBvdyh4RGlzdGFuY2UsIDIpICsgTWF0aC5wb3coeURpc3RhbmNlLCAyKSk7XHJcbiAgICB9O1xyXG4gICAgRmlyZXdvcmsucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uIChpbmRleCkge1xyXG4gICAgICAgIHRoaXMuY29vcmRpbmF0ZXMucG9wKCk7XHJcbiAgICAgICAgdGhpcy5jb29yZGluYXRlcy51bnNoaWZ0KFt0aGlzLngsIHRoaXMueV0pO1xyXG4gICAgICAgIGlmICh0aGlzLnRhcmdldFJhZGl1cyA8IDgpIHtcclxuICAgICAgICAgICAgdGhpcy50YXJnZXRSYWRpdXMgKz0gMC4zO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy50YXJnZXRSYWRpdXMgPSAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNwZWVkICo9IHRoaXMuYWNjZWxlcmF0aW9uO1xyXG4gICAgICAgIHZhciB2eCA9IE1hdGguY29zKHRoaXMuYW5nbGUpICogdGhpcy5zcGVlZDtcclxuICAgICAgICB2YXIgdnkgPSBNYXRoLnNpbih0aGlzLmFuZ2xlKSAqIHRoaXMuc3BlZWQ7XHJcbiAgICAgICAgdGhpcy5kaXN0YW5jZVRyYXZlbGVkID0gRmlyZXdvcmsuY2FsY3VsYXRlRGlzdGFuY2UodGhpcy5zeCwgdGhpcy5zeSwgdGhpcy54ICsgdngsIHRoaXMueSArIHZ5KTtcclxuICAgICAgICBpZiAodGhpcy5kaXN0YW5jZVRyYXZlbGVkID49IHRoaXMuZGlzdGFuY2VUb1RhcmdldCkge1xyXG4gICAgICAgICAgICBQYXJ0aWNsZS5jcmVhdGVQYXJ0aWNsZXModGhpcy50eCwgdGhpcy50eSwgRmlyZXdvcmsuX2h1ZSwgdGhpcy5wYXJ0aWNsZUNvdW50KTtcclxuICAgICAgICAgICAgRmlyZXdvcmsuZmlyZXdvcmtzLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnggKz0gdng7XHJcbiAgICAgICAgICAgIHRoaXMueSArPSB2eTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgRmlyZXdvcmsucHJvdG90eXBlLmRyYXcgPSBmdW5jdGlvbiAoY3R4KSB7XHJcbiAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgIGN0eC5tb3ZlVG8odGhpcy5jb29yZGluYXRlc1t0aGlzLmNvb3JkaW5hdGVzLmxlbmd0aCAtIDFdWzBdLCB0aGlzLmNvb3JkaW5hdGVzW3RoaXMuY29vcmRpbmF0ZXMubGVuZ3RoIC0gMV1bMV0pO1xyXG4gICAgICAgIGN0eC5saW5lV2lkdGggPSB0aGlzLnNpemU7XHJcbiAgICAgICAgY3R4LmxpbmVDYXAgPSAncm91bmQnO1xyXG4gICAgICAgIGN0eC5saW5lVG8odGhpcy54LCB0aGlzLnkpO1xyXG4gICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IFwiaHNsKFwiLmNvbmNhdChGaXJld29yay5faHVlLCBcIiwgMTAwJSwgXCIpLmNvbmNhdCh0aGlzLmJyaWdodG5lc3MsIFwiJSlcIik7XHJcbiAgICAgICAgY3R4LnN0cm9rZSgpO1xyXG4gICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICBjdHguYXJjKHRoaXMudHgsIHRoaXMudHksIHRoaXMudGFyZ2V0UmFkaXVzLCAwLCBNYXRoLlBJICogMik7XHJcbiAgICAgICAgY3R4LnN0cm9rZSgpO1xyXG4gICAgfTtcclxuICAgIEZpcmV3b3JrLl9odWUgPSAxMjA7XHJcbiAgICBGaXJld29yay5maXJld29ya3MgPSBbXTtcclxuICAgIHJldHVybiBGaXJld29yaztcclxufSgpKTtcclxuZXhwb3J0IGRlZmF1bHQgRmlyZXdvcms7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVJtbHlaWGR2Y21zdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk5emNtTXZkSE12Um1seVpYZHZjbXN1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNUMEZCVHl4TlFVRk5MRTFCUVUwc1ZVRkJWU3hEUVVGRE8wRkJRemxDTEU5QlFVOHNVVUZCVVN4TlFVRk5MRmxCUVZrc1EwRkJRenRCUVVWc1F6dEpRVU5KTEd0Q1FVRnRRaXhGUVVGVkxFVkJRVVVzUlVGQlZTeEZRVUZGTEVWQlFWVXNSVUZCUlN4RlFVRlZPMUZCYzBKNlJDeHBRa0ZCV1N4SFFVRkhMRWxCUVVrc1EwRkJRenRSUVVsd1FpeHhRa0ZCWjBJc1IwRkJSeXhEUVVGRExFTkJRVU03VVVGRmNrSXNiMEpCUVdVc1IwRkJSeXhEUVVGRExFTkJRVU03VVVGSmNFSXNVMEZCU1N4SFFVRkhMRU5CUVVNc1EwRkJRenRSUVVOVUxGVkJRVXNzUjBGQlJ5eERRVUZETEVOQlFVTTdVVUZIVml4cFFrRkJXU3hIUVVGSExFTkJRVU1zUTBGQlF6dFJRVXRxUWl4clFrRkJZU3hIUVVGSExFVkJRVVVzUTBGQlF6dFJRWFpEZGtJc1NVRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ5eEZRVUZGTEVOQlFVTTdVVUZEV2l4SlFVRkpMRU5CUVVNc1EwRkJReXhIUVVGSExFVkJRVVVzUTBGQlF6dFJRVVZhTEVsQlFVa3NRMEZCUXl4RlFVRkZMRWRCUVVjc1JVRkJSU3hEUVVGRE8xRkJRMklzU1VGQlNTeERRVUZETEVWQlFVVXNSMEZCUnl4RlFVRkZMRU5CUVVNN1VVRkZZaXhKUVVGSkxFTkJRVU1zUlVGQlJTeEhRVUZITEVWQlFVVXNRMEZCUXp0UlFVTmlMRWxCUVVrc1EwRkJReXhGUVVGRkxFZEJRVWNzUlVGQlJTeERRVUZETzFGQlJXSXNTVUZCU1N4RFFVRkRMR2RDUVVGblFpeEhRVUZITEZGQlFWRXNRMEZCUXl4cFFrRkJhVUlzUTBGQlF5eEZRVUZGTEVWQlFVVXNSVUZCUlN4RlFVRkZMRVZCUVVVc1JVRkJSU3hGUVVGRkxFTkJRVU1zUTBGQlF6dFJRVVZ1UlN4SlFVRkpMRU5CUVVNc1YwRkJWeXhIUVVGSExFVkJRVVVzUTBGQlF6dFJRVVYwUWl4UFFVRlBMRWxCUVVrc1EwRkJReXhsUVVGbExFVkJRVVVzUlVGQlJUdFpRVU16UWl4SlFVRkpMRU5CUVVNc1YwRkJWeXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRVZCUVVVc1NVRkJTU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdVMEZETTBNN1VVRkRSQ3hKUVVGSkxFTkJRVU1zUzBGQlN5eEhRVUZITEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1JVRkJSU3hIUVVGSExFVkJRVVVzUlVGQlJTeEZRVUZGTEVkQlFVY3NSVUZCUlN4RFFVRkRMRU5CUVVNN1VVRkRNVU1zU1VGQlNTeERRVUZETEZWQlFWVXNSMEZCUnl4TlFVRk5MRU5CUVVNc1RVRkJUU3hEUVVGRExFVkJRVVVzUlVGQlJTeEZRVUZGTEVOQlFVTXNRMEZCUXp0SlFVVTFReXhEUVVGRE8wbEJjMEpFTEhOQ1FVRnJRaXhsUVVGSE8yRkJSM0pDTzFsQlEwa3NUMEZCVHl4UlFVRlJMRU5CUVVNc1NVRkJTU3hEUVVGRE8xRkJRM3BDTEVOQlFVTTdZVUZNUkN4VlFVRnpRaXhMUVVGaE8xbEJReTlDTEZGQlFWRXNRMEZCUXl4SlFVRkpMRWRCUVVjc1MwRkJTeXhEUVVGRE8xRkJRekZDTEVOQlFVTTdPenRQUVVGQk8wbEJTMk1zTUVKQlFXbENMRWRCUVdoRExGVkJRV2xETEVkQlFWY3NSVUZCUlN4SFFVRlhMRVZCUVVVc1IwRkJWeXhGUVVGRkxFZEJRVmM3VVVGREwwVXNTVUZCU1N4VFFVRlRMRWRCUVVjc1IwRkJSeXhIUVVGSExFZEJRVWNzUTBGQlF6dFJRVU14UWl4SlFVRkpMRk5CUVZNc1IwRkJSeXhIUVVGSExFZEJRVWNzUjBGQlJ5eERRVUZETzFGQlF6RkNMRTlCUVU4c1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRk5CUVZNc1JVRkJSU3hEUVVGRExFTkJRVU1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRk5CUVZNc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzBsQlEzUkZMRU5CUVVNN1NVRkZUU3g1UWtGQlRTeEhRVUZpTEZWQlFXTXNTMEZCWVR0UlFVVjJRaXhKUVVGSkxFTkJRVU1zVjBGQlZ5eERRVUZETEVkQlFVY3NSVUZCUlN4RFFVRkRPMUZCUlhaQ0xFbEJRVWtzUTBGQlF5eFhRVUZYTEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zUlVGQlJTeEpRVUZKTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRSUVVjelF5eEpRVUZKTEVsQlFVa3NRMEZCUXl4WlFVRlpMRWRCUVVjc1EwRkJReXhGUVVGRk8xbEJRM1pDTEVsQlFVa3NRMEZCUXl4WlFVRlpMRWxCUVVrc1IwRkJSeXhEUVVGRE8xTkJRelZDTzJGQlFVMDdXVUZEU0N4SlFVRkpMRU5CUVVNc1dVRkJXU3hIUVVGSExFTkJRVU1zUTBGQlF6dFRRVU42UWp0UlFVTkVMRWxCUVVrc1EwRkJReXhMUVVGTExFbEJRVWtzU1VGQlNTeERRVUZETEZsQlFWa3NRMEZCUXp0UlFVZG9ReXhKUVVGSkxFVkJRVVVzUjBGQlJ5eEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRPMUZCUXpORExFbEJRVWtzUlVGQlJTeEhRVUZITEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEhRVUZITEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNN1VVRkZNME1zU1VGQlNTeERRVUZETEdkQ1FVRm5RaXhIUVVGSExGRkJRVkVzUTBGQlF5eHBRa0ZCYVVJc1EwRkJReXhKUVVGSkxFTkJRVU1zUlVGQlJTeEZRVUZGTEVsQlFVa3NRMEZCUXl4RlFVRkZMRVZCUVVVc1NVRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ5eEZRVUZGTEVWQlFVVXNTVUZCU1N4RFFVRkRMRU5CUVVNc1IwRkJSeXhGUVVGRkxFTkJRVU1zUTBGQlF6dFJRVWN2Uml4SlFVRkpMRWxCUVVrc1EwRkJReXhuUWtGQlowSXNTVUZCU1N4SlFVRkpMRU5CUVVNc1owSkJRV2RDTEVWQlFVVTdXVUZEYUVRc1VVRkJVU3hEUVVGRExHVkJRV1VzUTBGQlF5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RlFVRkZMRWxCUVVrc1EwRkJReXhGUVVGRkxFVkJRVVVzVVVGQlVTeERRVUZETEVsQlFVa3NSVUZCUlN4SlFVRkpMRU5CUVVNc1lVRkJZU3hEUVVGRExFTkJRVU03V1VGRk9VVXNVVUZCVVN4RFFVRkRMRk5CUVZNc1EwRkJReXhOUVVGTkxFTkJRVU1zUzBGQlN5eEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRPMU5CUTNaRE8yRkJRVTA3V1VGRlNDeEpRVUZKTEVOQlFVTXNRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJRenRaUVVOaUxFbEJRVWtzUTBGQlF5eERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRPMU5CUTJoQ08wbEJRMHdzUTBGQlF6dEpRVU5OTEhWQ1FVRkpMRWRCUVZnc1ZVRkJXU3hIUVVFMlFqdFJRVU55UXl4SFFVRkhMRU5CUVVNc1UwRkJVeXhGUVVGRkxFTkJRVU03VVVGRmFFSXNSMEZCUnl4RFFVRkRMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zVjBGQlZ5eERRVUZETEVsQlFVa3NRMEZCUXl4WFFVRlhMRU5CUVVNc1RVRkJUU3hIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkZMRWxCUVVrc1EwRkJReXhYUVVGWExFTkJRVU1zU1VGQlNTeERRVUZETEZkQlFWY3NRMEZCUXl4TlFVRk5MRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0UlFVTXZSeXhIUVVGSExFTkJRVU1zVTBGQlV5eEhRVUZITEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNN1VVRkRNVUlzUjBGQlJ5eERRVUZETEU5QlFVOHNSMEZCUnl4UFFVRlBMRU5CUVVNN1VVRkRkRUlzUjBGQlJ5eERRVUZETEUxQlFVMHNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJReXhGUVVGRkxFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0UlFVTXpRaXhIUVVGSExFTkJRVU1zVjBGQlZ5eEhRVUZITEdOQlFVOHNVVUZCVVN4RFFVRkRMRWxCUVVrc2NVSkJRVmNzU1VGQlNTeERRVUZETEZWQlFWVXNUMEZCU1N4RFFVRkRPMUZCUTNKRkxFZEJRVWNzUTBGQlF5eE5RVUZOTEVWQlFVVXNRMEZCUXp0UlFVVmlMRWRCUVVjc1EwRkJReXhUUVVGVExFVkJRVVVzUTBGQlF6dFJRVVZvUWl4SFFVRkhMRU5CUVVNc1IwRkJSeXhEUVVGRExFbEJRVWtzUTBGQlF5eEZRVUZGTEVWQlFVVXNTVUZCU1N4RFFVRkRMRVZCUVVVc1JVRkJSU3hKUVVGSkxFTkJRVU1zV1VGQldTeEZRVUZGTEVOQlFVTXNSVUZCUlN4SlFVRkpMRU5CUVVNc1JVRkJSU3hIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETzFGQlF6ZEVMRWRCUVVjc1EwRkJReXhOUVVGTkxFVkJRVVVzUTBGQlF6dEpRVU5xUWl4RFFVRkRPMGxCZGtWakxHRkJRVWtzUjBGQlJ5eEhRVUZITEVOQlFVTTdTVUY1UWxvc2EwSkJRVk1zUjBGQlpTeEZRVUZGTEVOQlFVTTdTVUVyUXpkRExHVkJRVU03UTBGQlFTeEJRWFpIUkN4SlFYVkhRenRsUVhaSGIwSXNVVUZCVVNKOSIsImltcG9ydCBGaXJld29yayBmcm9tICcuL0ZpcmV3b3JrJztcclxuaW1wb3J0IFBhcnRpY2xlIGZyb20gJy4vUGFydGljbGUnO1xyXG5pbXBvcnQgUmFuZG9tIGZyb20gJy4vUmFuZG9tJztcclxud2luZG93LnJlcXVlc3RBbmltRnJhbWUgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHxcclxuICAgICAgICB3aW5kb3cud2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XHJcbiAgICAgICAgd2luZG93Lm1velJlcXVlc3RBbmltYXRpb25GcmFtZSB8fFxyXG4gICAgICAgIChmdW5jdGlvbiAoY2FsbGJhY2spIHtcclxuICAgICAgICAgICAgcmV0dXJuIHdpbmRvdy5zZXRUaW1lb3V0KGNhbGxiYWNrLCAxMDAwIC8gNjApO1xyXG4gICAgICAgIH0pO1xyXG59KSgpO1xyXG52YXIgY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NhbnZhcycpO1xyXG52YXIgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7XHJcbmN0eC5nbG9iYWxBbHBoYSA9IDA7XHJcbnZhciBjdyA9IHdpbmRvdy5pbm5lcldpZHRoO1xyXG52YXIgY2ggPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XHJcbnZhciBvbmNlID0gdHJ1ZTtcclxuRmlyZXdvcmsuZmlyZXdvcmtzID0gW107XHJcblBhcnRpY2xlLnBhcnRpY2xlcyA9IFtdO1xyXG52YXIgbGltaXRlclRvdGFsID0gNTtcclxudmFyIGxpbWl0ZXJUaWNrID0gMDtcclxudmFyIHRpbWVyVG90YWwgPSA0MDtcclxudmFyIHRpbWVyVGljayA9IDA7XHJcbnZhciBtb3VzZWRvd24gPSBmYWxzZTtcclxudmFyIG14ID0gMDtcclxudmFyIG15ID0gMDtcclxudmFyIGRpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb24nKTtcclxudmFyIGgxID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2hlYWQnKTtcclxudmFyIGgyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2hlYWQyJyk7XHJcbnZhciBwbGF5ZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYmdNdXNpYycpO1xyXG52YXIgdGlwcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0aXBzJyk7XHJcbnZhciBpbWdkaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW1nZGl2Jyk7XHJcbnZhciBpbWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW1nJyk7XHJcbmNhbnZhcy53aWR0aCA9IGN3O1xyXG5jYW52YXMuaGVpZ2h0ID0gY2g7XHJcbnZhciB3b3JkcyA9IHtcclxuICAgIG9uZTogWyflv4Pmg7PkuovmiJAhJywgJ+S4h+S6i+WmguaEjyEnLCAn5bm456aP5bmz5a6JIScsICfkupTnpo/kuLTpl6ghJ10sXHJcbiAgICB0d286IFsn6LSi5rqQ5bm/6L+bIScsICflubTlubTmnInkvZkhJywgJ+aLm+i0oui/m+WunSEnLCAn6LSi5rqQ5rua5ruaISddLFxyXG4gICAgdGhyZWU6IFsn6JmO6JmO55Sf5aiBIScsICflkInmmJ/pq5jnhachJywgJ+emj+Wvv+WuieW6tyEnLCAn5YmN56iL5LiH6YeMISddXHJcbn07XHJcbmZ1bmN0aW9uIHNldE5hbWUoKSB7XHJcbiAgICB2YXIgbmFtZXVybCA9IGxvY2F0aW9uLmhyZWYuc3BsaXQoJz9uPScpWzFdO1xyXG4gICAgdmFyIG5hbWU7XHJcbiAgICBpZiAobmFtZXVybCkge1xyXG4gICAgICAgIHZhciByZWcgPSAvJi9nO1xyXG4gICAgICAgIGlmIChyZWcudGVzdChuYW1ldXJsKSkge1xyXG4gICAgICAgICAgICBuYW1lID0gZGVjb2RlVVJJKG5hbWV1cmwucmVwbGFjZShyZWcsICclJykpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdmFyIHRtcCA9IFtdO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG5hbWV1cmwubGVuZ3RoOyBpICs9IDIpIHtcclxuICAgICAgICAgICAgICAgIHRtcC5wdXNoKG5hbWV1cmwuc3Vic3RyaW5nKGksIGkgKyAyKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdG1wLnVuc2hpZnQoJycpO1xyXG4gICAgICAgICAgICBuYW1lID0gZGVjb2RlVVJJKHRtcC5qb2luKCclJykpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIG5hbWUgPSAn5oiR55qE5pyL5Y+LJztcclxuICAgIH1cclxuICAgIGgxLmlubmVyVGV4dCA9IG5hbWU7XHJcbiAgICBoMi5pbm5lclRleHQgPSAn5pil6IqC5b+r5LmQISc7XHJcbiAgICBkaXYuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBoMS5pbm5lclRleHQgPSAn56Wd6JmO5bm0JztcclxuICAgICAgICBoMi5pbm5lclRleHQgPSB3b3Jkcy5vbmVbUmFuZG9tLnJhbmRpbnQoMCwgMyldO1xyXG4gICAgfSwgMjIwMCk7XHJcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBoMS5pbm5lclRleHQgPSB3b3Jkcy50d29bUmFuZG9tLnJhbmRpbnQoMCwgMyldO1xyXG4gICAgICAgIGgyLmlubmVyVGV4dCA9IHdvcmRzLnRocmVlW1JhbmRvbS5yYW5kaW50KDAsIDMpXTtcclxuICAgIH0sIDQwMDApO1xyXG4gICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgZGl2LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgaDIuaW5uZXJUZXh0ID0gJyc7XHJcbiAgICAgICAgaW1nLnN0eWxlLndpZHRoID0gJzQwMHB4JztcclxuICAgICAgICBpbWcuc3R5bGUuaGVpZ2h0ID0gJzQwMHB4JztcclxuICAgICAgICBpbWdkaXYuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcbiAgICB9LCA1NjAwKTtcclxuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGltZy5zdHlsZS53aWR0aCA9ICc1MDBweCc7XHJcbiAgICAgICAgaW1nLnN0eWxlLmhlaWdodCA9ICc1MDBweCc7XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAyMDsgaSsrKSB7XHJcbiAgICAgICAgICAgIEZpcmV3b3JrLmZpcmV3b3Jrcy5wdXNoKG5ldyBGaXJld29yayhjdyAvIDIsIGNoLCBSYW5kb20ucmFuZG9tKDAsIGN3KSwgUmFuZG9tLnJhbmRvbSgwLCBjaCAvIDIpKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSwgNjEwMCk7XHJcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpbWdkaXYuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICBvbmNlID0gdHJ1ZTtcclxuICAgIH0sIDgyMDApO1xyXG59XHJcbmZ1bmN0aW9uIHNob3dUaW1lcihtc2Vjb25kKSB7XHJcbiAgICBoMS5pbm5lclRleHQgPSAnJztcclxuICAgIGgxLmlubmVyVGV4dCA9ICcnO1xyXG4gICAgcGxheWVyLnBsYXkoKTtcclxuICAgIGRpdi5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuICAgIHZhciBsZW4gPSBNYXRoLmZsb29yKG1zZWNvbmQgLyAxMDAwKTtcclxuICAgIHZhciBoYW5kbGUgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaDIuaW5uZXJUZXh0ID0gbGVuLnRvRml4ZWQoMCk7XHJcbiAgICAgICAgbGVuLS07XHJcbiAgICAgICAgaWYgKGxlbiA8IDApIHtcclxuICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChoYW5kbGUpO1xyXG4gICAgICAgICAgICBzZXROYW1lKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSwgMTAwMCk7XHJcbn1cclxuZnVuY3Rpb24gbG9vcCgpIHtcclxuICAgIHdpbmRvdy5yZXF1ZXN0QW5pbUZyYW1lKGxvb3ApO1xyXG4gICAgRmlyZXdvcmsuaHVlICs9IDAuNTtcclxuICAgIGN0eC5nbG9iYWxDb21wb3NpdGVPcGVyYXRpb24gPSAnZGVzdGluYXRpb24tb3V0JztcclxuICAgIGN0eC5maWxsU3R5bGUgPSAncmdiYSgwLCAwLCAwLCAwLjUpJztcclxuICAgIGN0eC5maWxsUmVjdCgwLCAwLCBjdywgY2gpO1xyXG4gICAgY3R4Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbiA9ICdsaWdodGVyJztcclxuICAgIHZhciBpID0gRmlyZXdvcmsuZmlyZXdvcmtzLmxlbmd0aDtcclxuICAgIHdoaWxlIChpLS0pIHtcclxuICAgICAgICBGaXJld29yay5maXJld29ya3NbaV0uZHJhdyhjdHgpO1xyXG4gICAgICAgIEZpcmV3b3JrLmZpcmV3b3Jrc1tpXS51cGRhdGUoaSk7XHJcbiAgICB9XHJcbiAgICB2YXIgaSA9IFBhcnRpY2xlLnBhcnRpY2xlcy5sZW5ndGg7XHJcbiAgICB3aGlsZSAoaS0tKSB7XHJcbiAgICAgICAgUGFydGljbGUucGFydGljbGVzW2ldLmRyYXcoY3R4KTtcclxuICAgICAgICBQYXJ0aWNsZS5wYXJ0aWNsZXNbaV0udXBkYXRlKGkpO1xyXG4gICAgfVxyXG4gICAgaWYgKHRpbWVyVGljayA+PSB0aW1lclRvdGFsKSB7XHJcbiAgICAgICAgaWYgKCFtb3VzZWRvd24pIHtcclxuICAgICAgICAgICAgRmlyZXdvcmsuZmlyZXdvcmtzLnB1c2gobmV3IEZpcmV3b3JrKGN3IC8gMiwgY2gsIFJhbmRvbS5yYW5kb20oMCwgY3cpLCBSYW5kb20ucmFuZG9tKDAsIGNoIC8gMikpKTtcclxuICAgICAgICAgICAgdGltZXJUaWNrID0gMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICB0aW1lclRpY2srKztcclxuICAgIH1cclxuICAgIGlmIChsaW1pdGVyVGljayA+PSBsaW1pdGVyVG90YWwpIHtcclxuICAgICAgICBpZiAobW91c2Vkb3duKSB7XHJcbiAgICAgICAgICAgIEZpcmV3b3JrLmZpcmV3b3Jrcy5wdXNoKG5ldyBGaXJld29yayhjdyAvIDIsIGNoLCBteCwgbXkpKTtcclxuICAgICAgICAgICAgbGltaXRlclRpY2sgPSAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIGxpbWl0ZXJUaWNrKys7XHJcbiAgICB9XHJcbn1cclxudmFyIGR4ID0gMDtcclxuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICBteCA9IGUucGFnZVggLSBjYW52YXMub2Zmc2V0TGVmdDtcclxuICAgIG15ID0gZS5wYWdlWSAtIGNhbnZhcy5vZmZzZXRUb3A7XHJcbn0pO1xyXG5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgZnVuY3Rpb24gKGUpIHtcclxuICAgIGlmIChvbmNlKSB7XHJcbiAgICAgICAgZHggPSBlLnBhZ2VYIC0gY2FudmFzLm9mZnNldExlZnQ7XHJcbiAgICB9XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBtb3VzZWRvd24gPSB0cnVlO1xyXG59KTtcclxuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgaWYgKG9uY2UpIHtcclxuICAgICAgICBkeCAtPSBlLnBhZ2VYIC0gY2FudmFzLm9mZnNldExlZnQ7XHJcbiAgICAgICAgZHggPSBNYXRoLmFicyhkeCk7XHJcbiAgICAgICAgaWYgKGR4ID4gY3cgLyAyKSB7XHJcbiAgICAgICAgICAgIG9uY2UgPSBmYWxzZTtcclxuICAgICAgICAgICAgc2hvd1RpbWVyKDMwMDApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIG1vdXNlZG93biA9IGZhbHNlO1xyXG59KTtcclxuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgaWYgKG9uY2UpIHtcclxuICAgICAgICBkeCA9IGUudG91Y2hlc1swXS5wYWdlWCAtIGNhbnZhcy5vZmZzZXRMZWZ0O1xyXG4gICAgfVxyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgbW91c2Vkb3duID0gdHJ1ZTtcclxufSk7XHJcbmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICBpZiAob25jZSkge1xyXG4gICAgICAgIGR4IC09IGUuY2hhbmdlZFRvdWNoZXNbMF0ucGFnZVggLSBjYW52YXMub2Zmc2V0TGVmdDtcclxuICAgICAgICBkeCA9IE1hdGguYWJzKGR4KTtcclxuICAgICAgICBpZiAoZHggPiBjdyAvIDIpIHtcclxuICAgICAgICAgICAgb25jZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICBzaG93VGltZXIoMzAwMCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgbW91c2Vkb3duID0gZmFsc2U7XHJcbn0pO1xyXG5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgZnVuY3Rpb24gKGUpIHtcclxuICAgIG14ID0gZS50b3VjaGVzWzBdLnBhZ2VYIC0gY2FudmFzLm9mZnNldExlZnQ7XHJcbiAgICBteSA9IGUudG91Y2hlc1swXS5wYWdlWSAtIGNhbnZhcy5vZmZzZXRUb3A7XHJcbn0pO1xyXG53aW5kb3cub25sb2FkID0gZnVuY3Rpb24gKCkge1xyXG4gICAgbG9vcCgpO1xyXG4gICAgdGlwcy5zdHlsZS5hbmltYXRpb24gPSAnZmFkZSAzcyBjdWJpYy1iZXppZXIoMCwgMCwgMSwgMSkgaW5maW5pdGUnO1xyXG4gICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGlwcy5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgfSwgMjkwMCk7XHJcbn07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWJXRnBiaTVxY3lJc0luTnZkWEpqWlZKdmIzUWlPaUlpTENKemIzVnlZMlZ6SWpwYklpNHVMM055WXk5MGN5OXRZV2x1TG5SeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRTlCUVU4c1VVRkJVU3hOUVVGTkxGbEJRVmtzUTBGQlF6dEJRVU5zUXl4UFFVRlBMRkZCUVZFc1RVRkJUU3haUVVGWkxFTkJRVU03UVVGRGJFTXNUMEZCVHl4TlFVRk5MRTFCUVUwc1ZVRkJWU3hEUVVGRE8wRkJVVGxDTEUxQlFVMHNRMEZCUXl4blFrRkJaMElzUjBGQlJ5eERRVUZETzBsQlEzWkNMRTlCUVU4c1RVRkJUU3hEUVVGRExIRkNRVUZ4UWp0UlFVTXZRaXhOUVVGTkxFTkJRVU1zTWtKQlFUSkNPMUZCUTJ4RExFMUJRVTBzUTBGQlF5eDNRa0ZCZDBJN1VVRkRMMElzUTBGQlF5eFZRVUZETEZGQlFYTkNPMWxCUTNCQ0xFOUJRVThzVFVGQlRTeERRVUZETEZWQlFWVXNRMEZCUXl4UlFVRlJMRVZCUVVVc1NVRkJTU3hIUVVGSExFVkJRVVVzUTBGQlF5eERRVUZETzFGQlEyeEVMRU5CUVVNc1EwRkJReXhEUVVGRE8wRkJRMWdzUTBGQlF5eERRVUZETEVWQlFUQkRMRU5CUVVNN1FVRkhOME1zU1VGQlRTeE5RVUZOTEVkQlFVY3NVVUZCVVN4RFFVRkRMR05CUVdNc1EwRkJReXhSUVVGUkxFTkJRWE5DTEVOQlFVTTdRVUZEZEVVc1NVRkJUU3hIUVVGSExFZEJRVWNzVFVGQlRTeERRVUZETEZWQlFWVXNRMEZCUXl4SlFVRkpMRU5CUVVVc1EwRkJRenRCUVVWeVF5eEhRVUZITEVOQlFVTXNWMEZCVnl4SFFVRkhMRU5CUVVNc1EwRkJRenRCUVVWd1FpeEpRVUZOTEVWQlFVVXNSMEZCUnl4TlFVRk5MRU5CUVVNc1ZVRkJWU3hEUVVGRE8wRkJRemRDTEVsQlFVMHNSVUZCUlN4SFFVRkhMRTFCUVUwc1EwRkJReXhYUVVGWExFTkJRVU03UVVGRk9VSXNTVUZCU1N4SlFVRkpMRWRCUVVjc1NVRkJTU3hEUVVGRE8wRkJSV2hDTEZGQlFWRXNRMEZCUXl4VFFVRlRMRWRCUVVjc1JVRkJSU3hEUVVGRE8wRkJRM2hDTEZGQlFWRXNRMEZCUXl4VFFVRlRMRWRCUVVjc1JVRkJSU3hEUVVGRE8wRkJSWGhDTEVsQlFVa3NXVUZCV1N4SFFVRkhMRU5CUVVNc1EwRkJRenRCUVVOeVFpeEpRVUZKTEZkQlFWY3NSMEZCUnl4RFFVRkRMRU5CUVVNN1FVRkZjRUlzU1VGQlNTeFZRVUZWTEVkQlFVY3NSVUZCUlN4RFFVRkRPMEZCUTNCQ0xFbEJRVWtzVTBGQlV5eEhRVUZITEVOQlFVTXNRMEZCUXp0QlFVTnNRaXhKUVVGSkxGTkJRVk1zUjBGQlJ5eExRVUZMTEVOQlFVTTdRVUZGZEVJc1NVRkJTU3hGUVVGRkxFZEJRVmNzUTBGQlF5eERRVUZETzBGQlJXNUNMRWxCUVVrc1JVRkJSU3hIUVVGWExFTkJRVU1zUTBGQlF6dEJRVU51UWl4SlFVRk5MRWRCUVVjc1IwRkJSeXhSUVVGUkxFTkJRVU1zWTBGQll5eERRVUZETEV0QlFVc3NRMEZCYlVJc1EwRkJRenRCUVVNM1JDeEpRVUZOTEVWQlFVVXNSMEZCUnl4UlFVRlJMRU5CUVVNc1kwRkJZeXhEUVVGRExFMUJRVTBzUTBGQmRVSXNRMEZCUXp0QlFVTnFSU3hKUVVGTkxFVkJRVVVzUjBGQlJ5eFJRVUZSTEVOQlFVTXNZMEZCWXl4RFFVRkRMRTlCUVU4c1EwRkJkVUlzUTBGQlF6dEJRVU5zUlN4SlFVRk5MRTFCUVUwc1IwRkJSeXhSUVVGUkxFTkJRVU1zWTBGQll5eERRVUZETEZOQlFWTXNRMEZCY1VJc1EwRkJRenRCUVVOMFJTeEpRVUZOTEVsQlFVa3NSMEZCUnl4UlFVRlJMRU5CUVVNc1kwRkJZeXhEUVVGRExFMUJRVTBzUTBGQmJVSXNRMEZCUXp0QlFVTXZSQ3hKUVVGTkxFMUJRVTBzUjBGQlJ5eFJRVUZSTEVOQlFVTXNZMEZCWXl4RFFVRkRMRkZCUVZFc1EwRkJiVUlzUTBGQlF6dEJRVU51UlN4SlFVRk5MRWRCUVVjc1IwRkJSeXhSUVVGUkxFTkJRVU1zWTBGQll5eERRVUZETEV0QlFVc3NRMEZCY1VJc1EwRkJRenRCUVVVdlJDeE5RVUZOTEVOQlFVTXNTMEZCU3l4SFFVRkhMRVZCUVVVc1EwRkJRenRCUVVOc1FpeE5RVUZOTEVOQlFVTXNUVUZCVFN4SFFVRkhMRVZCUVVVc1EwRkJRenRCUVVOdVFpeEpRVUZOTEV0QlFVc3NSMEZCUnp0SlFVTldMRWRCUVVjc1JVRkJSU3hEUVVGRExFOUJRVThzUlVGQlJTeFBRVUZQTEVWQlFVVXNUMEZCVHl4RlFVRkZMRTlCUVU4c1EwRkJRenRKUVVONlF5eEhRVUZITEVWQlFVVXNRMEZCUXl4UFFVRlBMRVZCUVVVc1QwRkJUeXhGUVVGRkxFOUJRVThzUlVGQlJTeFBRVUZQTEVOQlFVTTdTVUZEZWtNc1MwRkJTeXhGUVVGRkxFTkJRVU1zVDBGQlR5eEZRVUZGTEU5QlFVOHNSVUZCUlN4UFFVRlBMRVZCUVVVc1QwRkJUeXhEUVVGRE8wTkJRemxETEVOQlFVTTdRVUZIUml4VFFVRlRMRTlCUVU4N1NVRkRXaXhKUVVGTkxFOUJRVThzUjBGQlJ5eFJRVUZSTEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0SlFVTTVReXhKUVVGSkxFbEJRVmtzUTBGQlF6dEpRVVZxUWl4SlFVRkpMRTlCUVU4c1JVRkJSVHRSUVVOVUxFbEJRVTBzUjBGQlJ5eEhRVUZITEVsQlFVa3NRMEZCUXp0UlFVTnFRaXhKUVVGSkxFZEJRVWNzUTBGQlF5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRVZCUVVVN1dVRkRia0lzU1VGQlNTeEhRVUZITEZOQlFWTXNRMEZCUXl4UFFVRlBMRU5CUVVNc1QwRkJUeXhEUVVGRExFZEJRVWNzUlVGQlJTeEhRVUZITEVOQlFVTXNRMEZCUXl4RFFVRkRPMU5CUXk5RE8yRkJRMGs3V1VGRFJDeEpRVUZKTEVkQlFVY3NSMEZCWVN4RlFVRkZMRU5CUVVNN1dVRkRka0lzUzBGQlN5eEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRVZCUVVVc1EwRkJReXhIUVVGSExFOUJRVThzUTBGQlF5eE5RVUZOTEVWQlFVVXNRMEZCUXl4SlFVRkpMRU5CUVVNc1JVRkJSVHRuUWtGRGVFTXNSMEZCUnl4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zVTBGQlV5eERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dGhRVU42UXp0WlFVTkVMRWRCUVVjc1EwRkJReXhQUVVGUExFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTTdXVUZEYUVJc1NVRkJTU3hIUVVGSExGTkJRVk1zUTBGQlF5eEhRVUZITEVOQlFVTXNTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU03VTBGRGJrTTdTMEZGU2p0VFFVTkpPMUZCUTBRc1NVRkJTU3hIUVVGSExFMUJRVTBzUTBGQlF6dExRVU5xUWp0SlFVZEVMRVZCUVVVc1EwRkJReXhUUVVGVExFZEJRVWNzU1VGQlNTeERRVUZETzBsQlEzQkNMRVZCUVVVc1EwRkJReXhUUVVGVExFZEJRVWNzVDBGQlR5eERRVUZETzBsQlEzWkNMRWRCUVVjc1EwRkJReXhMUVVGTExFTkJRVU1zVDBGQlR5eEhRVUZITEU5QlFVOHNRMEZCUXp0SlFVYzFRaXhWUVVGVkxFTkJRVU03VVVGRFVDeEZRVUZGTEVOQlFVTXNVMEZCVXl4SFFVRkhMRXRCUVVzc1EwRkJRenRSUVVOeVFpeEZRVUZGTEVOQlFVTXNVMEZCVXl4SFFVRkhMRXRCUVVzc1EwRkJReXhIUVVGSExFTkJRVU1zVFVGQlRTeERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dEpRVU51UkN4RFFVRkRMRVZCUVVVc1NVRkJTU3hEUVVGRExFTkJRVU03U1VGRFZDeFZRVUZWTEVOQlFVTTdVVUZEVUN4RlFVRkZMRU5CUVVNc1UwRkJVeXhIUVVGSExFdEJRVXNzUTBGQlF5eEhRVUZITEVOQlFVTXNUVUZCVFN4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0UlFVTXZReXhGUVVGRkxFTkJRVU1zVTBGQlV5eEhRVUZITEV0QlFVc3NRMEZCUXl4TFFVRkxMRU5CUVVNc1RVRkJUU3hEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRKUVVkeVJDeERRVUZETEVWQlFVVXNTVUZCU1N4RFFVRkRMRU5CUVVNN1NVRkRWQ3hWUVVGVkxFTkJRVU03VVVGRFVDeEhRVUZITEVOQlFVTXNTMEZCU3l4RFFVRkRMRTlCUVU4c1IwRkJSeXhOUVVGTkxFTkJRVU03VVVGRE0wSXNSVUZCUlN4RFFVRkRMRk5CUVZNc1IwRkJSeXhGUVVGRkxFTkJRVU03VVVGRGJFSXNSMEZCUnl4RFFVRkRMRXRCUVVzc1EwRkJReXhMUVVGTExFZEJRVWNzVDBGQlR5eERRVUZETzFGQlF6RkNMRWRCUVVjc1EwRkJReXhMUVVGTExFTkJRVU1zVFVGQlRTeEhRVUZITEU5QlFVOHNRMEZCUXp0UlFVTXpRaXhOUVVGTkxFTkJRVU1zUzBGQlN5eERRVUZETEU5QlFVOHNSMEZCUnl4UFFVRlBMRU5CUVVNN1NVRkhia01zUTBGQlF5eEZRVUZGTEVsQlFVa3NRMEZCUXl4RFFVRkRPMGxCUTFRc1ZVRkJWU3hEUVVGRE8xRkJRMUFzUjBGQlJ5eERRVUZETEV0QlFVc3NRMEZCUXl4TFFVRkxMRWRCUVVjc1QwRkJUeXhEUVVGRE8xRkJRekZDTEVkQlFVY3NRMEZCUXl4TFFVRkxMRU5CUVVNc1RVRkJUU3hIUVVGSExFOUJRVThzUTBGQlF6dFJRVWN6UWl4TFFVRkpMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGQlJTeERRVUZETEVkQlFVY3NSVUZCUlN4RlFVRkZMRU5CUVVNc1JVRkJSU3hGUVVGRk8xbEJRM2hDTEZGQlFWRXNRMEZCUXl4VFFVRlRMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzVVVGQlVTeERRVUZETEVWQlFVVXNSMEZCUnl4RFFVRkRMRVZCUVVVc1JVRkJSU3hGUVVGRkxFMUJRVTBzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXl4RlFVRkZMRVZCUVVVc1EwRkJReXhGUVVGRkxFMUJRVTBzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXl4RlFVRkZMRVZCUVVVc1IwRkJSeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdVMEZEY2tjN1NVRkRUQ3hEUVVGRExFVkJRVVVzU1VGQlNTeERRVUZETEVOQlFVTTdTVUZMVkN4VlFVRlZMRU5CUVVNN1VVRkRVQ3hOUVVGTkxFTkJRVU1zUzBGQlN5eERRVUZETEU5QlFVOHNSMEZCUnl4TlFVRk5MRU5CUVVNN1VVRkRPVUlzU1VGQlNTeEhRVUZITEVsQlFVa3NRMEZCUXp0SlFVVm9RaXhEUVVGRExFVkJRVVVzU1VGQlNTeERRVUZETEVOQlFVTTdRVUZEWWl4RFFVRkRPMEZCUlVRc1UwRkJVeXhUUVVGVExFTkJRVU1zVDBGQlpUdEpRVU01UWl4RlFVRkZMRU5CUVVNc1UwRkJVeXhIUVVGSExFVkJRVVVzUTBGQlF6dEpRVU5zUWl4RlFVRkZMRU5CUVVNc1UwRkJVeXhIUVVGSExFVkJRVVVzUTBGQlF6dEpRVU5zUWl4TlFVRk5MRU5CUVVNc1NVRkJTU3hGUVVGRkxFTkJRVU03U1VGRFpDeEhRVUZITEVOQlFVTXNTMEZCU3l4RFFVRkRMRTlCUVU4c1IwRkJSeXhQUVVGUExFTkJRVU03U1VGRE5VSXNTVUZCU1N4SFFVRkhMRWRCUVVjc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFBRVUZQTEVkQlFVY3NTVUZCU1N4RFFVRkRMRU5CUVVNN1NVRkRja01zU1VGQlNTeE5RVUZOTEVkQlFVY3NWMEZCVnl4RFFVRkRPMUZCUTNKQ0xFVkJRVVVzUTBGQlF5eFRRVUZUTEVkQlFVY3NSMEZCUnl4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dFJRVU01UWl4SFFVRkhMRVZCUVVVc1EwRkJRenRSUVVOT0xFbEJRVWtzUjBGQlJ5eEhRVUZITEVOQlFVTXNSVUZCUlR0WlFVTlVMR0ZCUVdFc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF6dFpRVU4wUWl4UFFVRlBMRVZCUVVVc1EwRkJRenRUUVVOaU8wbEJRMHdzUTBGQlF5eEZRVUZGTEVsQlFVa3NRMEZCUXl4RFFVRkRPMEZCUldJc1EwRkJRenRCUVVkRUxGTkJRVk1zU1VGQlNUdEpRVWRVTEUxQlFVMHNRMEZCUXl4blFrRkJhVUlzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0SlFVY3ZRaXhSUVVGUkxFTkJRVU1zUjBGQlJ5eEpRVUZKTEVkQlFVY3NRMEZCUXp0SlFVdHdRaXhIUVVGSExFTkJRVU1zZDBKQlFYZENMRWRCUVVjc2FVSkJRV2xDTEVOQlFVTTdTVUZGYWtRc1IwRkJSeXhEUVVGRExGTkJRVk1zUjBGQlJ5eHZRa0ZCYjBJc1EwRkJRenRKUVVOeVF5eEhRVUZITEVOQlFVTXNVVUZCVVN4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUlVGQlJTeEZRVUZGTEVWQlFVVXNRMEZCUXl4RFFVRkRPMGxCUnpOQ0xFZEJRVWNzUTBGQlF5eDNRa0ZCZDBJc1IwRkJSeXhUUVVGVExFTkJRVU03U1VGSGVrTXNTVUZCU1N4RFFVRkRMRWRCUVVjc1VVRkJVU3hEUVVGRExGTkJRVk1zUTBGQlF5eE5RVUZOTEVOQlFVTTdTVUZEYkVNc1QwRkJUeXhEUVVGRExFVkJRVVVzUlVGQlJUdFJRVU5TTEZGQlFWRXNRMEZCUXl4VFFVRlRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRPMUZCUTJoRExGRkJRVkVzUTBGQlF5eFRRVUZUTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzB0QlEyNURPMGxCUjBRc1NVRkJTU3hEUVVGRExFZEJRVWNzVVVGQlVTeERRVUZETEZOQlFWTXNRMEZCUXl4TlFVRk5MRU5CUVVNN1NVRkRiRU1zVDBGQlR5eERRVUZETEVWQlFVVXNSVUZCUlR0UlFVTlNMRkZCUVZFc1EwRkJReXhUUVVGVExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRE8xRkJRMmhETEZGQlFWRXNRMEZCUXl4VFFVRlRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMHRCUTI1RE8wbEJSMFFzU1VGQlNTeFRRVUZUTEVsQlFVa3NWVUZCVlN4RlFVRkZPMUZCUTNwQ0xFbEJRVWtzUTBGQlF5eFRRVUZUTEVWQlFVVTdXVUZGV2l4UlFVRlJMRU5CUVVNc1UwRkJVeXhEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEZGQlFWRXNRMEZCUXl4RlFVRkZMRWRCUVVjc1EwRkJReXhGUVVGRkxFVkJRVVVzUlVGQlJTeE5RVUZOTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRkxFTkJRVU1zUlVGQlJTeE5RVUZOTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRkxFZEJRVWNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUTJ4SExGTkJRVk1zUjBGQlJ5eERRVUZETEVOQlFVTTdVMEZEYWtJN1MwRkRTanRUUVVGTk8xRkJRMGdzVTBGQlV5eEZRVUZGTEVOQlFVTTdTMEZEWmp0SlFVZEVMRWxCUVVrc1YwRkJWeXhKUVVGSkxGbEJRVmtzUlVGQlJUdFJRVU0zUWl4SlFVRkpMRk5CUVZNc1JVRkJSVHRaUVVWWUxGRkJRVkVzUTBGQlF5eFRRVUZUTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWxCUVVrc1VVRkJVU3hEUVVGRExFVkJRVVVzUjBGQlJ5eERRVUZETEVWQlFVVXNSVUZCUlN4RlFVRkZMRVZCUVVVc1JVRkJSU3hGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETzFsQlF6RkVMRmRCUVZjc1IwRkJSeXhEUVVGRExFTkJRVU03VTBGRGJrSTdTMEZEU2p0VFFVRk5PMUZCUTBnc1YwRkJWeXhGUVVGRkxFTkJRVU03UzBGRGFrSTdRVUZEVEN4RFFVRkRPMEZCUlVRc1NVRkJTU3hGUVVGRkxFZEJRVWNzUTBGQlF5eERRVUZETzBGQlIxZ3NUVUZCVFN4RFFVRkRMR2RDUVVGblFpeERRVUZETEZkQlFWY3NSVUZCUlN4VlFVRkRMRU5CUVVNN1NVRkRia01zUlVGQlJTeEhRVUZITEVOQlFVTXNRMEZCUXl4TFFVRkxMRWRCUVVjc1RVRkJUU3hEUVVGRExGVkJRVlVzUTBGQlF6dEpRVU5xUXl4RlFVRkZMRWRCUVVjc1EwRkJReXhEUVVGRExFdEJRVXNzUjBGQlJ5eE5RVUZOTEVOQlFVTXNVMEZCVXl4RFFVRkRPMEZCUTNCRExFTkJRVU1zUTBGQlF5eERRVUZETzBGQlIwZ3NUVUZCVFN4RFFVRkRMR2RDUVVGblFpeERRVUZETEZkQlFWY3NSVUZCUlN4VlFVRkRMRU5CUVVNN1NVRkRia01zU1VGQlNTeEpRVUZKTEVWQlFVVTdVVUZEVGl4RlFVRkZMRWRCUVVjc1EwRkJReXhEUVVGRExFdEJRVXNzUjBGQlJ5eE5RVUZOTEVOQlFVTXNWVUZCVlN4RFFVRkRPMHRCUTNCRE8wbEJRMFFzUTBGQlF5eERRVUZETEdOQlFXTXNSVUZCUlN4RFFVRkRPMGxCUTI1Q0xGTkJRVk1zUjBGQlJ5eEpRVUZKTEVOQlFVTTdRVUZEY2tJc1EwRkJReXhEUVVGRExFTkJRVU03UVVGRlNDeE5RVUZOTEVOQlFVTXNaMEpCUVdkQ0xFTkJRVU1zVTBGQlV5eEZRVUZGTEZWQlFVTXNRMEZCUXp0SlFVTnFReXhKUVVGSkxFbEJRVWtzUlVGQlJUdFJRVU5PTEVWQlFVVXNTVUZCU1N4RFFVRkRMRU5CUVVNc1MwRkJTeXhIUVVGSExFMUJRVTBzUTBGQlF5eFZRVUZWTEVOQlFVTTdVVUZEYkVNc1JVRkJSU3hIUVVGSExFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNN1VVRkRiRUlzU1VGQlNTeEZRVUZGTEVkQlFVY3NSVUZCUlN4SFFVRkhMRU5CUVVNc1JVRkJSVHRaUVVOaUxFbEJRVWtzUjBGQlJ5eExRVUZMTEVOQlFVTTdXVUZEWWl4VFFVRlRMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03VTBGSmJrSTdTMEZGU2p0SlFVTkVMRU5CUVVNc1EwRkJReXhqUVVGakxFVkJRVVVzUTBGQlF6dEpRVU51UWl4VFFVRlRMRWRCUVVjc1MwRkJTeXhEUVVGRE8wRkJRM1JDTEVOQlFVTXNRMEZCUXl4RFFVRkRPMEZCUlVnc1RVRkJUU3hEUVVGRExHZENRVUZuUWl4RFFVRkRMRmxCUVZrc1JVRkJSU3hWUVVGRExFTkJRVU03U1VGRGNFTXNTVUZCU1N4SlFVRkpMRVZCUVVVN1VVRkRUaXhGUVVGRkxFZEJRVWNzUTBGQlF5eERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhMUVVGTExFZEJRVWNzVFVGQlRTeERRVUZETEZWQlFWVXNRMEZCUXp0TFFVTXZRenRKUVVORUxFTkJRVU1zUTBGQlF5eGpRVUZqTEVWQlFVVXNRMEZCUXp0SlFVTnVRaXhUUVVGVExFZEJRVWNzU1VGQlNTeERRVUZETzBGQlEzSkNMRU5CUVVNc1EwRkJReXhEUVVGRE8wRkJSVWdzVFVGQlRTeERRVUZETEdkQ1FVRm5RaXhEUVVGRExGVkJRVlVzUlVGQlJTeFZRVUZETEVOQlFVTTdTVUZEYkVNc1NVRkJTU3hKUVVGSkxFVkJRVVU3VVVGRFRpeEZRVUZGTEVsQlFVa3NRMEZCUXl4RFFVRkRMR05CUVdNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eExRVUZMTEVkQlFVY3NUVUZCVFN4RFFVRkRMRlZCUVZVc1EwRkJRenRSUVVOd1JDeEZRVUZGTEVkQlFVY3NTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF6dFJRVU5zUWl4SlFVRkpMRVZCUVVVc1IwRkJSeXhGUVVGRkxFZEJRVWNzUTBGQlF5eEZRVUZGTzFsQlEySXNTVUZCU1N4SFFVRkhMRXRCUVVzc1EwRkJRenRaUVVOaUxGTkJRVk1zUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0VFFVbHVRanRMUVVWS08wbEJRMFFzUTBGQlF5eERRVUZETEdOQlFXTXNSVUZCUlN4RFFVRkRPMGxCUTI1Q0xGTkJRVk1zUjBGQlJ5eExRVUZMTEVOQlFVTTdRVUZEZEVJc1EwRkJReXhEUVVGRExFTkJRVU03UVVGRlNDeE5RVUZOTEVOQlFVTXNaMEpCUVdkQ0xFTkJRVU1zVjBGQlZ5eEZRVUZGTEZWQlFVTXNRMEZCUXp0SlFVTnVReXhGUVVGRkxFZEJRVWNzUTBGQlF5eERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhMUVVGTExFZEJRVWNzVFVGQlRTeERRVUZETEZWQlFWVXNRMEZCUXp0SlFVTTFReXhGUVVGRkxFZEJRVWNzUTBGQlF5eERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhMUVVGTExFZEJRVWNzVFVGQlRTeERRVUZETEZOQlFWTXNRMEZCUXp0QlFVTXZReXhEUVVGRExFTkJRVU1zUTBGQlF6dEJRVWRJTEUxQlFVMHNRMEZCUXl4TlFVRk5MRWRCUVVjN1NVRkZXaXhKUVVGSkxFVkJRVVVzUTBGQlF6dEpRVU5RTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1UwRkJVeXhIUVVGSExESkRRVUV5UXl4RFFVRkRPMGxCUTI1RkxGVkJRVlVzUTBGQlF6dFJRVU5RTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1QwRkJUeXhIUVVGSExFMUJRVTBzUTBGQlF6dEpRVU5vUXl4RFFVRkRMRVZCUVVVc1NVRkJTU3hEUVVGRExFTkJRVU03UVVGRFlpeERRVUZETEVOQlFVTWlmUT09Il0sIm5hbWVzIjpbIlJhbmRvbSIsInJhbmRvbSIsIm1pbiIsIm1heCIsIk1hdGgiLCJyYW5kaW50IiwicmFuZ2UiLCJyb3VuZCIsIlBhcnRpY2xlIiwieCIsInkiLCJodWUiLCJ0aGlzIiwiYWxwaGEiLCJjb29yZGluYXRlQ291bnQiLCJmcmljdGlvbiIsImdyYXZpdHkiLCJzaXplIiwiY29vcmRpbmF0ZXMiLCJwdXNoIiwiYW5nbGUiLCJQSSIsInNwZWVkIiwiYnJpZ2h0bmVzcyIsImRlY2F5IiwiY3JlYXRlUGFydGljbGVzIiwibnVtIiwiaSIsInBhcnRpY2xlcyIsInByb3RvdHlwZSIsInVwZGF0ZSIsImluZGV4IiwicG9wIiwidW5zaGlmdCIsImNvcyIsInNpbiIsInNwbGljZSIsImRyYXciLCJjdHgiLCJiZWdpblBhdGgiLCJtb3ZlVG8iLCJsZW5ndGgiLCJsaW5lV2lkdGgiLCJsaW5lQ2FwIiwibGluZVRvIiwic3Ryb2tlU3R5bGUiLCJjb25jYXQiLCJzdHJva2UiLCJGaXJld29yayIsInN4Iiwic3kiLCJ0eCIsInR5IiwiYWNjZWxlcmF0aW9uIiwiZGlzdGFuY2VUcmF2ZWxlZCIsInRhcmdldFJhZGl1cyIsInBhcnRpY2xlQ291bnQiLCJkaXN0YW5jZVRvVGFyZ2V0IiwiY2FsY3VsYXRlRGlzdGFuY2UiLCJhdGFuMiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0IiwiX2h1ZSIsInNldCIsInZhbHVlIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsInAxeCIsInAxeSIsInAyeCIsInAyeSIsInhEaXN0YW5jZSIsInlEaXN0YW5jZSIsInNxcnQiLCJwb3ciLCJ2eCIsInZ5IiwiZmlyZXdvcmtzIiwiYXJjIiwid2luZG93IiwicmVxdWVzdEFuaW1GcmFtZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsIndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSIsIm1velJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbGxiYWNrIiwic2V0VGltZW91dCIsImNhbnZhcyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJnZXRDb250ZXh0IiwiZ2xvYmFsQWxwaGEiLCJjdyIsImlubmVyV2lkdGgiLCJjaCIsImlubmVySGVpZ2h0Iiwib25jZSIsImxpbWl0ZXJUaWNrIiwidGltZXJUaWNrIiwibW91c2Vkb3duIiwibXgiLCJteSIsImRpdiIsImgxIiwiaDIiLCJwbGF5ZXIiLCJ0aXBzIiwiaW1nZGl2IiwiaW1nIiwid2lkdGgiLCJoZWlnaHQiLCJ3b3JkcyIsIm9uZSIsInR3byIsInRocmVlIiwic2hvd1RpbWVyIiwibXNlY29uZCIsImlubmVyVGV4dCIsInBsYXkiLCJzdHlsZSIsImRpc3BsYXkiLCJsZW4iLCJmbG9vciIsImhhbmRsZSIsInNldEludGVydmFsIiwidG9GaXhlZCIsImNsZWFySW50ZXJ2YWwiLCJuYW1lIiwibmFtZXVybCIsImxvY2F0aW9uIiwiaHJlZiIsInNwbGl0IiwicmVnIiwidGVzdCIsImRlY29kZVVSSSIsInJlcGxhY2UiLCJ0bXAiLCJzdWJzdHJpbmciLCJqb2luIiwic2V0TmFtZSIsImxvb3AiLCJnbG9iYWxDb21wb3NpdGVPcGVyYXRpb24iLCJmaWxsU3R5bGUiLCJmaWxsUmVjdCIsImR4IiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJwYWdlWCIsIm9mZnNldExlZnQiLCJwYWdlWSIsIm9mZnNldFRvcCIsInByZXZlbnREZWZhdWx0IiwiYWJzIiwidG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwib25sb2FkIiwiYW5pbWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==