(()=>{"use strict";const t=function(){function t(){}return t.random=function(t,e){return Math.random()*(e-t)+t},t}();var e=function(){function e(e,i,s){for(this.alpha=1,this.coordinateCount=5,this.friction=.95,this.gravity=1,this.size=4,this.x=e,this.y=i,this.coordinates=[];this.coordinateCount--;)this.coordinates.push([this.x,this.y]);this.angle=t.random(0,2*Math.PI),this.speed=t.random(1,15),this.friction=.95,this.hue=t.random(s-20,s+20),this.brightness=t.random(50,80),this.decay=t.random(.005,.01)}return e.createParticles=function(t,i,s,n){void 0===n&&(n=30);for(var o=0;o<n;o++)e.particles.push(new e(t,i,s))},e.prototype.update=function(t){this.coordinates.pop(),this.coordinates.unshift([this.x,this.y]),this.speed*=this.friction,this.x+=Math.cos(this.angle)*this.speed,this.y+=Math.sin(this.angle)*this.speed+this.gravity,this.alpha-=this.decay,this.alpha<=this.decay&&e.particles.splice(t,1)},e.prototype.draw=function(t){t.beginPath(),t.moveTo(this.coordinates[this.coordinates.length-1][0],this.coordinates[this.coordinates.length-1][1]),t.lineWidth=this.size,t.lineCap="round",t.lineTo(this.x,this.y),t.strokeStyle="hsla(".concat(this.hue,", 100%, ").concat(this.brightness,"%, ").concat(this.alpha,")"),t.stroke()},e.particles=[],e}();const i=e;var s=function(){function e(i,s,n,o){for(this.acceleration=1.03,this.distanceTraveled=0,this.coordinateCount=3,this.size=6,this.speed=1,this.targetRadius=1,this.x=i,this.y=s,this.sx=i,this.sy=s,this.tx=n,this.ty=o,this.distanceToTarget=e.calculateDistance(i,s,n,o),this.coordinates=[];this.coordinateCount--;)this.coordinates.push([this.x,this.y]);this.angle=Math.atan2(o-s,n-i),this.brightness=t.random(50,70)}return Object.defineProperty(e,"hue",{get:function(){return e._hue},set:function(t){e._hue=t},enumerable:!1,configurable:!0}),e.calculateDistance=function(t,e,i,s){var n=t-i,o=e-s;return Math.sqrt(Math.pow(n,2)+Math.pow(o,2))},e.prototype.update=function(t){this.coordinates.pop(),this.coordinates.unshift([this.x,this.y]),this.targetRadius<8?this.targetRadius+=.3:this.targetRadius=1,this.speed*=this.acceleration;var s=Math.cos(this.angle)*this.speed,n=Math.sin(this.angle)*this.speed;this.distanceTraveled=e.calculateDistance(this.sx,this.sy,this.x+s,this.y+n),this.distanceTraveled>=this.distanceToTarget?(i.createParticles(this.tx,this.ty,e._hue),e.fireworks.splice(t,1)):(this.x+=s,this.y+=n)},e.prototype.draw=function(t){t.beginPath(),t.moveTo(this.coordinates[this.coordinates.length-1][0],this.coordinates[this.coordinates.length-1][1]),t.lineWidth=this.size,t.lineCap="round",t.lineTo(this.x,this.y),t.strokeStyle="hsl(".concat(e._hue,", 100%, ").concat(this.brightness,"%)"),t.stroke(),t.beginPath(),t.arc(this.tx,this.ty,this.targetRadius,0,2*Math.PI),t.stroke()},e._hue=120,e.fireworks=[],e}();const n=s;var o=function(){};window.requestAnimFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||function(t){return window.setTimeout(t,1e3/60)};var a=document.getElementById("canvas"),h=a.getContext("2d");o.ctx=h,h.globalAlpha=0;var r=window.innerWidth,c=window.innerHeight,d=!0;n.fireworks=[],i.particles=[];var u=0,l=0,f=!1,p=0,g=0,m=document.getElementById("con"),y=document.getElementById("head"),w=document.getElementById("head2"),v=document.getElementById("bgMusic");function x(t){y.innerText="",y.innerText="",v.play(),m.style.display="block";var e=Math.floor(t/1e3),i=setInterval((function(){var t,s,n;w.innerText=e.toFixed(0),--e<0&&(clearInterval(i),s=location.href.split("html?n=")[1],n=new RegExp("&","g"),t=s?decodeURI(s.replace(n,"%")):"我的朋友",y.innerText=t,w.innerText="春节快乐!",m.style.display="block",setTimeout((function(){m.style.display="none",w.innerText="",d=!0}),7e3))}),1e3)}function T(){var e=o.ctx;window.requestAnimFrame(T),n.hue+=.5,e.globalCompositeOperation="destination-out",e.fillStyle="rgba(0, 0, 0, 0.5)",e.fillRect(0,0,r,c),e.globalCompositeOperation="lighter";for(var s=n.fireworks.length;s--;)n.fireworks[s].draw(e),n.fireworks[s].update(s);for(s=i.particles.length;s--;)i.particles[s].draw(e),i.particles[s].update(s);l>=40?f||(n.fireworks.push(new n(r/2,c,t.random(0,r),t.random(0,c/2))),l=0):l++,u>=5?f&&(n.fireworks.push(new n(r/2,c,p,g)),u=0):u++}a.width=r,a.height=c;var b=0;a.addEventListener("mousemove",(function(t){p=t.pageX-a.offsetLeft,g=t.pageY-a.offsetTop})),a.addEventListener("mousedown",(function(t){d&&(b=t.pageX-a.offsetLeft),t.preventDefault(),f=!0})),a.addEventListener("mouseup",(function(t){d&&(b-=t.pageX-a.offsetLeft,(b=Math.abs(b))>r/2&&(d=!1,x(5e3))),t.preventDefault(),f=!1})),a.addEventListener("touchstart",(function(t){d&&(b=t.touches[0].pageX-a.offsetLeft),t.preventDefault(),f=!0})),a.addEventListener("touchend",(function(t){d&&(b-=t.changedTouches[0].pageX-a.offsetLeft,(b=Math.abs(b))>r/2&&(d=!1,x(5e3))),t.preventDefault(),f=!1})),a.addEventListener("touchmove",(function(t){p=t.touches[0].pageX-a.offsetLeft,g=t.touches[0].pageY-a.offsetTop})),window.onload=function(){T()}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,