(()=>{"use strict";const t=function(){function t(){}return t.random=function(t,e){return Math.random()*(e-t)+t},t}();var e=function(){function e(e,i,n){for(this.alpha=1,this.coordinateCount=5,this.friction=.95,this.gravity=1,this.size=4,this.x=e,this.y=i,this.coordinates=[];this.coordinateCount--;)this.coordinates.push([this.x,this.y]);this.angle=t.random(0,2*Math.PI),this.speed=t.random(1,15),this.friction=.95,this.hue=t.random(n-20,n+20),this.brightness=t.random(50,80),this.decay=t.random(.005,.01)}return e.createParticles=function(t,i,n,s){void 0===s&&(s=30);for(var o=0;o<s;o++)e.particles.push(new e(t,i,n))},e.prototype.update=function(t){this.coordinates.pop(),this.coordinates.unshift([this.x,this.y]),this.speed*=this.friction,this.x+=Math.cos(this.angle)*this.speed,this.y+=Math.sin(this.angle)*this.speed+this.gravity,this.alpha-=this.decay,this.alpha<=this.decay&&e.particles.splice(t,1)},e.prototype.draw=function(t){t.beginPath(),t.moveTo(this.coordinates[this.coordinates.length-1][0],this.coordinates[this.coordinates.length-1][1]),t.lineWidth=this.size,t.lineCap="round",t.lineTo(this.x,this.y),t.strokeStyle="hsla(".concat(this.hue,", 100%, ").concat(this.brightness,"%, ").concat(this.alpha,")"),t.stroke()},e.particles=[],e}();const i=e;var n=function(){function e(i,n,s,o){for(this.acceleration=1.03,this.distanceTraveled=0,this.coordinateCount=3,this.size=6,this.speed=1,this.targetRadius=1,this.particleCount=30,this.x=i,this.y=n,this.sx=i,this.sy=n,this.tx=s,this.ty=o,this.distanceToTarget=e.calculateDistance(i,n,s,o),this.coordinates=[];this.coordinateCount--;)this.coordinates.push([this.x,this.y]);this.angle=Math.atan2(o-n,s-i),this.brightness=t.random(50,70)}return Object.defineProperty(e,"hue",{get:function(){return e._hue},set:function(t){e._hue=t},enumerable:!1,configurable:!0}),e.calculateDistance=function(t,e,i,n){var s=t-i,o=e-n;return Math.sqrt(Math.pow(s,2)+Math.pow(o,2))},e.prototype.update=function(t){this.coordinates.pop(),this.coordinates.unshift([this.x,this.y]),this.targetRadius<8?this.targetRadius+=.3:this.targetRadius=1,this.speed*=this.acceleration;var n=Math.cos(this.angle)*this.speed,s=Math.sin(this.angle)*this.speed;this.distanceTraveled=e.calculateDistance(this.sx,this.sy,this.x+n,this.y+s),this.distanceTraveled>=this.distanceToTarget?(i.createParticles(this.tx,this.ty,e._hue,this.particleCount),e.fireworks.splice(t,1)):(this.x+=n,this.y+=s)},e.prototype.draw=function(t){t.beginPath(),t.moveTo(this.coordinates[this.coordinates.length-1][0],this.coordinates[this.coordinates.length-1][1]),t.lineWidth=this.size,t.lineCap="round",t.lineTo(this.x,this.y),t.strokeStyle="hsl(".concat(e._hue,", 100%, ").concat(this.brightness,"%)"),t.stroke(),t.beginPath(),t.arc(this.tx,this.ty,this.targetRadius,0,2*Math.PI),t.stroke()},e._hue=120,e.fireworks=[],e}();const s=n;window.requestAnimFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||function(t){return window.setTimeout(t,1e3/60)};var o=document.getElementById("canvas"),a=o.getContext("2d");a.globalAlpha=0;var r=window.innerWidth,h=window.innerHeight,c=!0;s.fireworks=[],i.particles=[];var d=0,u=0,l=!1,f=0,p=0,g=document.getElementById("con"),m=document.getElementById("head"),y=document.getElementById("head2"),w=document.getElementById("bgMusic"),v=document.getElementById("tips"),x=document.getElementById("imgdiv"),T=document.getElementById("img");function b(t){m.innerText="",m.innerText="",w.play(),g.style.display="block";var e=Math.floor(t/1e3),i=setInterval((function(){y.innerText=e.toFixed(0),--e<0&&(clearInterval(i),function(){var t,e=location.href.split("?n=")[1];if(e){var i=/&/g;if(i.test(e))t=decodeURI(e.replace(i,"%"));else{for(var n=[],s=0;s<e.length;s+=2)n.push(e.substring(s,s+2));n.unshift(""),t=decodeURI(n.join("%"))}}else t="我的朋友";m.innerText=t,y.innerText="春节快乐!",g.style.display="block",setTimeout((function(){m.innerText="祝虎年",y.innerText="幸福平安!"}),3500),setTimeout((function(){m.innerText="财源广进!",y.innerText="万事如意!"}),4100),setTimeout((function(){g.style.display="none",y.innerText="",T.style.width="500px",T.style.height="500px",x.style.display="block"}),4700),setTimeout((function(){x.style.display="none",c=!0}),7e3)}())}),1e3)}function k(){window.requestAnimFrame(k),s.hue+=.5,a.globalCompositeOperation="destination-out",a.fillStyle="rgba(0, 0, 0, 0.5)",a.fillRect(0,0,r,h),a.globalCompositeOperation="lighter";for(var e=s.fireworks.length;e--;)s.fireworks[e].draw(a),s.fireworks[e].update(e);for(e=i.particles.length;e--;)i.particles[e].draw(a),i.particles[e].update(e);u>=40?l||(s.fireworks.push(new s(r/2,h,t.random(0,r),t.random(0,h/2))),u=0):u++,d>=5?l&&(s.fireworks.push(new s(r/2,h,f,p)),d=0):d++}o.width=r,o.height=h;var M=0;o.addEventListener("mousemove",(function(t){f=t.pageX-o.offsetLeft,p=t.pageY-o.offsetTop})),o.addEventListener("mousedown",(function(t){c&&(M=t.pageX-o.offsetLeft),t.preventDefault(),l=!0})),o.addEventListener("mouseup",(function(t){c&&(M-=t.pageX-o.offsetLeft,(M=Math.abs(M))>r/2&&(c=!1,b(5e3))),t.preventDefault(),l=!1})),o.addEventListener("touchstart",(function(t){c&&(M=t.touches[0].pageX-o.offsetLeft),t.preventDefault(),l=!0})),o.addEventListener("touchend",(function(t){c&&(M-=t.changedTouches[0].pageX-o.offsetLeft,(M=Math.abs(M))>r/2&&(c=!1,b(5e3))),t.preventDefault(),l=!1})),o.addEventListener("touchmove",(function(t){f=t.touches[0].pageX-o.offsetLeft,p=t.touches[0].pageY-o.offsetTop})),window.onload=function(){k(),v.style.animation="fade 3s cubic-bezier(0, 0, 1, 1) infinite",setTimeout((function(){v.style.display="none"}),2900)}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,